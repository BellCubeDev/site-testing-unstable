{"version":3,"file":"universal.ts","names":["import","strs","menuCorners","mdl","quotes","window","domParser","DOMParser","afterDelay","timeout","callback","args","setTimeout","wait","Promise","resolve","UpdatableObject","update","this","suppressUpdates","update_","update_bound","bind","updateFromInput","updateFromInput_","updateFromInput_bound","destroy","queueMicrotask","destroy_","destroy_bound","nestAnimationFrames","num","requestAnimationFrame","async","animationFrames","anAnimationFrame","capitalizeFirstLetter","str","charAt","toUpperCase","slice","trimWhitespace","trailingNewline","trimStart","trimEnd","replace","keyTypes","Enter","Escape","Esc","z","y","s","registerForEvents","element","events","options","registerForEvents_","unregisterForEvents","registerForEvents_wrappedFunctions","Map","registerForEvents_handledKeys","unregister","handling","setListener","removeEventListener","addEventListener","wrapCallback","f","get","call","set","Object","fromEntries","entries","map","key","value","handleKey","ev","KeyboardEvent","functionName","find","modifiers","_","every","mod","requestedCallback","preventDefault","stopPropagation","evt","clickEvt","setProxies","obj","handler","runOnEach","oldSetter","wrappedSetter","target","prop","receiver","Proxy","randomNumber","min","max","places","placesMult","Math","pow","round","random","focusAnyElement","preventScrolling","focus","hadTabIndex","hasAttribute","setAttribute","preventScroll","removeAttribute","copyCode","elem","Error","codeElem","parentElement","querySelector","navigator","clipboard","writeText","textContent","selection","getSelection","tempRange","Range","selectNode","removeAllRanges","addRange","getInputValue","input","getAttribute","placeholder","___getOrCreateChild","tagName","child","getElementsByTagName","Document","ownerDocument","createElement","is","appendChild","___removeChildByTag","count","children","removedCount","i","length","remove","Element","prototype","getOrCreateChildByTag","removeChildByTag","Set","moveItem","item","newAdjacentItem","relativePosition","has","arr","itemIndex","indexOf","adjacentIndex","splice","clear","forEach","add","moveIndex","newIndex","getSetIndex","index","___getExtends","type","returnVal","push","registerUpgrade","subject","upgrade","propagateToTargetChildren","propagateToSubjectToChildren","forEachChildAndOrParent","upgrades","getExtends","constructor","targetingComponents","start","doChildren","forEachChild","queryParams","location","search","substring","split","param","trim","componentsToRegister","registerBCDComponent","component","componentHandler","register","classAsString","asString","cssClass","widget","upgradeElements","document","getElementsByClassName","e","console","error","registerBCDComponents","components","componentArr","BCD_CollapsibleParent","details","details_inner","summary","openIcons90deg","self","adjacent","elm","classList","contains","classAdjacent","isOpen","classIsOpen","toggle","doSetDuration","close","open","reEval","instant","stateChangePromise","desiredState","undefined","getComputedStyle","transitionDuration","onTransitionEnd","transitionEndFunct","listener","event","propertyName","evaluateDuration","ariaHidden","style","visibility","setDisabled","marginTop","instantTransition","hasClosedFinal","final","duration","offsetHeight","pointerEvents","animationDuration","icon","r","static","disabled","allowPointerEvents","wasDisabled","oldTabIndex","forcePointerEvents","forceDisabled","ariaDisabled","tabIndex","doRun","opening","contentHeight","BCDDetails","super","classDetailsInner","temp_childrenArr","node","childNodes","temp_summary","previousElementSibling","BCDSummary","log","errItem","TypeError","id","boundReEval","reEvalIfClosed","ResizeObserver","observe","activate","temp_details","nextElementSibling","getElementById","divertedCompletion","temp_inner","correctFocus","keyDown","blur","pointerType","path","Array","some","el","PrettyJSON","element_","json","JSON","parse","stringify","BCDModalDialog","EventTarget","closeByClickOutside","ariaModal","hidden","body","documentElement","prepend","obfuscator","MaterialLayout","cssClasses","OBFUSCATOR","closeButtons","button","boundHideFunction","show","delay","shownModal","modalsToShow","modal","shift","evalQueue","show_forReal","detail","once","CustomEvent","cancelable","bubbles","composed","dispatchEvent","beforeShowEvent","IS_DRAWER_OPEN","afterShowEvent","msg","hide","currentTarget","stopImmediatePropagation","getBeforeHideEvent","getAfterHideEvent","BCDDropdown","MaterialMenu","doReorder","options_","options_keys","selectedOption","selectionTextElements","buttonElement","Constant_","CLOSE_TIMEOUT","forElement_","boundForClick_","boundForKeydown_","ariaHasPopup","tempOptions","keys","option","createOption","updateOptions","focusOutHandler","relatedTarget","selectByString","includes","warn","goldenChild","makeSelected","demonChildren","filter","sort","a","b","removeChild","makeNotSelected","onSelectCallback","tooltip","addToList","li","registerItem","optionData","onSelect","onCreateOption","createTooltip","targetElement","onItemSelected","dropdown","_optionElements","optionElements","hasShownOrHiddenThisFrame","PointerEvent","pointerId","mozInputSource","ariaExpanded","BCDTooltip","bcdDropdown_AwesomeButton","click","percentage","end","match","BCDTabButton","MaterialButton","boundTab","name","setAnchor","entry","performance","getEntriesByType","hash","toLowerCase","findTabNumber","button_","tabNumber_","tabNumber","siblingsAndSelf","sibling","tab_siblingsAndTab","tab","inert","marginLeft","addHidden","anchorToSet","setAnchorIn3AnimFrames","history","replaceState","pathname","relation","position","boundElement","gapBridgeElement","openDelayMS","parseInt","tempRelation","tempElement","selector","HTMLElement","tempPos","boundEnter","handleHoverEnter","boundLeave","handleHoverLeave","boundTouch","handleTouch","passive","targetTouches","bypassWait","MouseEvent","elementFromPoint","x","instance","container_","showPart1","showPart2","exit","hide_bound","setPosition","transform","transition","tipStyle","elemRect","getBoundingClientRect","tipRect","width","offsetWidth","height","top","left","bcdDynamicTextArea_base","adjust","boundAdjust","change","bcdDynamicTextAreaHeight","paddingPX","isNaN","scrollHeight","bcdDynamicTextAreaWidth","scrollWidth","RelativeFilePicker","relativeTo","directory","SettingsGrid","getSetting","relativeToAttr","boundOnChange","after","boundOnButtonClick","onChange","fs","BellFolder","fileHandle","openFilePicker","DOMException","nameArr","resolveChildPath","debug","join","Event","onButtonClick","RelativeImagePicker","imageElem","noImageElem","createNoImageElem","svg","noImageDoc","fetch","then","text","parseFromString","cloneNode","before","src","showImage","hideImage","display","lastValue","dir","info","fileHandle_","getFile","all","InvalidNameError","at","readAsDataURL","svgSrc","initSvg","svgRes","encodeURIComponent","cache","ok","innerHTML","status","statusText","svgTxt","message","settingsToUpdate","updateSettings","settingTemplate","settingsPath","settings","settingsElemID","HTMLTemplateElement","content","createSetting","clone","upgradeElement","insertAdjacentElement","filterType","displayType","HTMLInputElement","checked","setSetting","BCDSettingsDropdown","suppressError","currentDir","tempKeyMap","settingKey","keyMap","literalName","prettyName","toString","bcd_universalJS_init","link","links","layout","drawer_","rel","randomTextField","quote","getRandomQuote","lazyStyles","href","head","lazyStylesLoaded","elementsWithClickEvt","querySelectorAll","funct","onclick","buttons","blurElem","headers","header","navHeaders","startsWith","scrollTo","scrollIntoView","behavior","drawer","drawerOpenHandler","drawerCloseHandler","bcd_init_functions","universal"],"sourceRoot":"https://raw.githubusercontent.com/BellCubeDev/site-testing-unstable/deployment/","sources":["https://raw.githubusercontent.com/BellCubeDev/site-testing/deployment/universal.ts"],"sourcesContent":["import * as mdl from './assets/site/mdl/material.js';\nimport * as quotes from './universal_quotes.js';\nimport type * as fs from './filesystem-interface.js';\n\nfunction loadFS() {\n    return import('./filesystem-interface.js');\n}\n\n/*\n    Thanks to Patrick Gillespie for the great ASCII art generator!\n    https://patorjk.com/software/taag/#p=display&h=0&v=0&f=Big%20Money-nw\n    ...makes this code *so* much easier to maintain... you know, 'cuz I can find my functions in VSCode's Minimap\n\n\n\n\n$$\\   $$\\   $$\\     $$\\ $$\\ $$\\   $$\\     $$\\\n$$ |  $$ |  $$ |    \\__|$$ |\\__|  $$ |    \\__|\n$$ |  $$ |$$$$$$\\   $$\\ $$ |$$\\ $$$$$$\\   $$\\  $$$$$$\\   $$$$$$$\\\n$$ |  $$ |\\_$$  _|  $$ |$$ |$$ |\\_$$  _|  $$ |$$  __$$\\ $$  _____|\n$$ |  $$ |  $$ |    $$ |$$ |$$ |  $$ |    $$ |$$$$$$$$ |\\$$$$$$\\\n$$ |  $$ |  $$ |$$\\ $$ |$$ |$$ |  $$ |$$\\ $$ |$$   ____| \\____$$\\\n\\$$$$$$  |  \\$$$$  |$$ |$$ |$$ |  \\$$$$  |$$ |\\$$$$$$$\\ $$$$$$$  |\n \\______/    \\____/ \\__|\\__|\\__|   \\____/ \\__| \\_______|\\______*/\n\ninterface DocAndElementInjections {\n    /** Returns the first element with the specified tag name or creates one if it does not exist */\n    getOrCreateChildByTag<K extends keyof HTMLElementTagNameMap>(tagName: K): HTMLElementTagNameMap[K];\n    getOrCreateChildByTag(tagName: string):Element;\n\n    removeChildByTag<K extends keyof HTMLElementTagNameMap>(tagName: K, count?: number): void;\n    removeChildByTag(tagName: string, count?: number): void;\n}\n\ndeclare global {\n    interface Element extends DocAndElementInjections {\n        upgrades?: ComponentMap;\n        targetingComponents?: ComponentMap;\n    }\n    interface Document extends DocAndElementInjections {}\n\n    interface HTMLElement extends DocAndElementInjections {\n        onclick: EventTypes<HTMLElement>['activate']|null;\n    }\n\n    interface Set<T> {\n        /** Changes the position of an item in the set relative to another item\n         * @returns Whether or not the item could be moved\n        */\n        moveItem: typeof ___moveItem;\n\n        /** Changes the position of an item in the set using a provided index\n         * @returns Whether or not the item could be moved\n        */\n        moveIndex: typeof ___moveIndex;\n    }\n\n    interface Window {\n        domParser: DOMParser;\n\n        /** Variables set by the page */\n        //bcdPageVars: Partial<{}>\n\n        /** Browser-Supported Click Event */\n        clickEvt: 'click'|'mousedown'\n\n        /** The MDL layout element */\n        layout: mdl.MaterialLayout\n\n        /** A list of Query Parameters from the URI */\n        queryParams: Record<string, string>;\n\n        /** A list of functions used when loading scripts */\n        bcd_init_functions: Record<string, Function>;\n\n        copyCode(elem: HTMLElement): void;\n\n        lazyStylesLoaded: true|undefined;\n\n        BCDSettingsDropdown: typeof BCDSettingsDropdown;\n\n        registerForEvents: typeof registerForEvents;\n    }\n}\nwindow.domParser = new DOMParser();\n\n\n\n/** Rearranged and better-typed parameters for `setTimeout` */\nexport function afterDelay<TCallback extends (...args: any) => any = any>(timeout: number, callback: TCallback|string, ...args: Parameters<TCallback>): ReturnType<Window['setTimeout']> {\n    // @ts-ignore: the `Parameters` utility type returns a tuple, which inherently has an iterator function--regardless of what TypeScript thinks\n    return window.setTimeout(callback, timeout, ...(args || []));\n}\n\n/** Promise that resolves after the specified timeout */\nexport function wait(timeout: number): Promise<void> {\n    return new Promise(resolve => afterDelay(timeout, resolve));\n}\n\nexport abstract class UpdatableObject {\n    update() {\n        if (this.suppressUpdates) return;\n        this.suppressUpdates = true;\n        this.update_();\n        this.suppressUpdates = false;\n    }\n    readonly update_bound = this.update.bind(this);\n    protected update_() {return;}\n\n    updateFromInput() {\n        if (this.suppressUpdates) return;\n        this.suppressUpdates = true;\n        this.updateFromInput_();\n        this.suppressUpdates = false;\n    }\n        readonly updateFromInput_bound = this.updateFromInput.bind(this);\n\n    protected updateFromInput_() {return;}\n\n    destroy() {\n        this.suppressUpdates = true;\n        queueMicrotask(() => this.suppressUpdates = true);\n        this.destroy_();\n    }\n    readonly destroy_bound = this.destroy.bind(this);\n\n    protected destroy_() {return;}\n\n    suppressUpdates = false;\n}\n\nexport function nestAnimationFrames(num: number, callback: () => unknown) {\n    if (num <= 0) return callback();\n    requestAnimationFrame(() => nestAnimationFrames(num - 1, callback));\n}\n\nexport async function animationFrames(num: number): Promise<void> {\n    return new Promise(resolve => nestAnimationFrames(num, resolve));\n}\nexport function anAnimationFrame(): Promise<void> {\n    return animationFrames(1);\n}\n\n// ==================================\n// ======== STRING UTILITIES ========\n// ==================================\n\n/** Removes whitespace at the beginning and end of a string and at the end of every included line*/\nexport function capitalizeFirstLetter(str: string): string {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n/** Removes whitespace at the beginning and end of a string and at the end of every included line*/\nexport function trimWhitespace(str: string, trailingNewline = false): string {\n    return  str.trimStart()                     // Trim whitespace at the start of the string\n                .trimEnd()                      // Trim whitespace at the end of the string\n                .replace(/[^\\S\\n]*$/gm, '')     // Trim whitespace at the end of each line\n                + (trailingNewline ? '\\n' : '') // Add a trailing newline if requested\n;}\n\n/***\n *    $$$$$$$$\\                                  $$\\\n *    $$  _____|                                 $$ |\n *    $$ |      $$\\    $$\\  $$$$$$\\  $$$$$$$\\  $$$$$$\\\n *    $$$$$\\    \\$$\\  $$  |$$  __$$\\ $$  __$$\\ \\_$$  _|\n *    $$  __|    \\$$\\$$  / $$$$$$$$ |$$ |  $$ |  $$ |\n *    $$ |        \\$$$  /  $$   ____|$$ |  $$ |  $$ |$$\\\n *    $$$$$$$$\\    \\$  /   \\$$$$$$$\\ $$ |  $$ |  \\$$$$  |\n *    \\________|    \\_/     \\_______|\\__|  \\__|   \\____/\n *\n *\n *\n *    $$\\   $$\\                           $$\\ $$\\ $$\\\n *    $$ |  $$ |                          $$ |$$ |\\__|\n *    $$ |  $$ | $$$$$$\\  $$$$$$$\\   $$$$$$$ |$$ |$$\\ $$$$$$$\\   $$$$$$\\\n *    $$$$$$$$ | \\____$$\\ $$  __$$\\ $$  __$$ |$$ |$$ |$$  __$$\\ $$  __$$\\\n *    $$  __$$ | $$$$$$$ |$$ |  $$ |$$ /  $$ |$$ |$$ |$$ |  $$ |$$ /  $$ |\n *    $$ |  $$ |$$  __$$ |$$ |  $$ |$$ |  $$ |$$ |$$ |$$ |  $$ |$$ |  $$ |\n *    $$ |  $$ |\\$$$$$$$ |$$ |  $$ |\\$$$$$$$ |$$ |$$ |$$ |  $$ |\\$$$$$$$ |\n *    \\__|  \\__| \\_______|\\__|  \\__| \\_______|\\__|\\__|\\__|  \\__| \\____$$ |\n *                                                              $$\\   $$ |\n *                                                              \\$$$$$$  |\n *                                                               \\______/\n */\n\ndeclare global {\n    interface Window {\n        /** Browser-Supported Click Event */\n        clickEvt: 'click'|'mousedown'\n\n        /** Add the provided event listener object to the element */\n        registerForEvents: typeof registerForEvents;\n        /** Remove the provided event listener object from the element */\n        unregisterForEvents: typeof unregisterForEvents;\n    }\n}\n\n/** An item that can receive an event */\ntype EventElement = HTMLElement|typeof window|typeof document;\n\n/** Constructs an event callback from the event and element types */\ntype EventCallback<TEventType extends Event, TElement extends EventElement = EventElement> = (this: TElement, ev: TEventType) => unknown;\n\n/** The various types of registerable events and their callback types */\ninterface EventTypes<TElement extends EventElement = EventElement> {\n    activate?: EventCallback<TElement extends HTMLElement ? (MouseEvent|KeyboardEvent) : (Event|KeyboardEvent), TElement>\n\n    change?: EventCallback<Event, TElement>\n\n    dropdownInput?: EventCallback<Event, TElement>\n\n    exit?: EventCallback<KeyboardEvent, TElement>\n\n    undo?: EventCallback<KeyboardEvent, TElement>\n    redo?: EventCallback<KeyboardEvent, TElement>\n\n    save?: EventCallback<KeyboardEvent, TElement>\n\n    anyKey?: EventCallback<KeyboardEvent, TElement>\n    key?: EventCallback<KeyboardEvent, TElement>\n}\n\n/** Various keys that can be held to modify the use of another key */\ntype modifierKeys = 'ctrl' | 'shift' | 'alt' | 'meta';\n\n/** A list of keys and their associated actions */\nconst keyTypes: Record<string, [modifierKeys[], keyof EventTypes][]> = {\n    'Enter': [[[], 'activate']],\n    ' ': [[[], 'activate']],\n    'Escape': [[[], 'exit']],\n    'Esc': [[[], 'exit']],\n    'z': [\n        [['ctrl'], 'undo'], [['meta'], 'undo'],\n        [['ctrl', 'shift'], 'redo'], [['meta', 'shift'], 'redo']\n    ],\n    'y': [[['ctrl'], 'redo']],\n    's': [[['ctrl'], 'save']],\n};\n\n/** Add the provided event listener object to the element.\n * WARNING: If you wish to unregister these events later, you WILL need to use the same options object.\n */\nexport function registerForEvents<TElement extends EventElement>(element: TElement, events: EventTypes<TElement>, options?: boolean|AddEventListenerOptions): void {\n    registerForEvents_(element, events, options, false);\n}\n\n/** Remove the provided event listener object from the element\n * WARNING: To unregister these events, you WILL need to use the same options object as when you registered it.\n*/\nexport function unregisterForEvents<TElement extends EventElement>(element: TElement, events: EventTypes<TElement>, options?: boolean|AddEventListenerOptions): void {\n    registerForEvents_(element, events, options, true);\n}\n\n/** A mapping of event callbacks to their wrapped versions (stored so the event can be later removed) */\nexport const registerForEvents_wrappedFunctions = new Map<Function, Function>();\n\n/** A mapping of event objects to their keyboard event handlers (stored so the event can be later removed) */\nexport const registerForEvents_handledKeys = new Map<EventTypes<any>, (this: any, ev: Event)=>void>();\n\nfunction registerForEvents_<TElement extends EventElement>(element: TElement, events: EventTypes<TElement>, options?: boolean|AddEventListenerOptions, unregister = false): void {\n    let handling = false;\n\n    const setListener = unregister ? element.removeEventListener.bind(element) : element.addEventListener.bind(element);\n\n    function wrapCallback<TCallback extends (this: TElement, ...args: any[]) => any>(callback: TCallback): ((this: ThisParameterType<TCallback>, ...args: Parameters<TCallback>)=>ReturnType<TCallback>|void) {\n        let f = registerForEvents_wrappedFunctions.get(callback);\n\n        if (!f) {\n            f = function(this: ThisParameterType<TCallback>, ...args: Parameters<TCallback>) {\n                if (handling) return;\n                handling = true;\n                queueMicrotask(() => handling = false);\n                return callback.call(this, ...args) as ReturnType<TCallback>;\n            };\n\n            registerForEvents_wrappedFunctions.set(callback, f);\n        }\n\n        // @ts-ignore: The type is correct, but TypeScript doesn't know that\n        return f;\n    }\n\n    // Wrap all the callbacks!\n    events = Object.fromEntries(Object.entries(events).map(([key, value]) => [key, wrapCallback(value)]));\n\n    let handleKey = registerForEvents_handledKeys.get(events);\n    if (!handleKey) {\n        handleKey = function(this: TElement, ev: Event) {\n            if ( !(ev instanceof KeyboardEvent) ) return;\n\n            // Find and call the appropriate callback\n            const functionName = keyTypes[ev.key]?.find(([modifiers, _]) => modifiers.every(mod => ev[`${mod}Key`]))?.[1] || 'anyKey';\n            const requestedCallback = events[functionName];\n\n            if (requestedCallback && functionName !== 'anyKey') {\n                ev.preventDefault();\n                ev.stopPropagation();\n            }\n\n            const callback = requestedCallback || events['anyKey'];\n            callback?.call(element, ev);\n        };\n\n        registerForEvents_handledKeys.set(events, handleKey);\n    }\n\n    setListener('keydown', handleKey, options);\n\n    for (const evt in events) switch (evt) {\n        case 'activate': // @ts-ignore - my logic is perfectly valid, but TypeScript doesn't know that 🤷‍♂️\n            setListener(window.clickEvt, events[evt]!, options);\n            break;\n\n        case 'change':\n            setListener('change', events[evt]!, options);\n            setListener('input', events[evt]!, options);\n            break;\n\n        case 'dropdownInput':\n            setListener('bcd-dropdown-change', events[evt]!, options);\n            break;\n\n        case 'exit': break;\n        case 'undo': break;\n        case 'redo': break;\n        case 'anyKey': break;\n    }\n}\nwindow.registerForEvents = registerForEvents;\n\n/***\n *    $$$$$$$\\                                                 $$$$$$\\    $$\\                $$$$$$\\   $$$$$$\\\n *    $$  __$$\\                                               $$  __$$\\   $$ |              $$  __$$\\ $$  __$$\\\n *    $$ |  $$ | $$$$$$\\   $$$$$$\\  $$\\   $$\\ $$\\   $$\\       $$ /  \\__|$$$$$$\\   $$\\   $$\\ $$ /  \\__|$$ /  \\__|\n *    $$$$$$$  |$$  __$$\\ $$  __$$\\ \\$$\\ $$  |$$ |  $$ |      \\$$$$$$\\  \\_$$  _|  $$ |  $$ |$$$$\\     $$$$\\\n *    $$  ____/ $$ |  \\__|$$ /  $$ | \\$$$$  / $$ |  $$ |       \\____$$\\   $$ |    $$ |  $$ |$$  _|    $$  _|\n *    $$ |      $$ |      $$ |  $$ | $$  $$<  $$ |  $$ |      $$\\   $$ |  $$ |$$\\ $$ |  $$ |$$ |      $$ |\n *    $$ |      $$ |      \\$$$$$$  |$$  /\\$$\\ \\$$$$$$$ |      \\$$$$$$  |  \\$$$$  |\\$$$$$$  |$$ |      $$ |\n *    \\__|      \\__|       \\______/ \\__/  \\__| \\____$$ |       \\______/    \\____/  \\______/ \\__|      \\__|\n *                                            $$\\   $$ |\n *                                            \\$$$$$$  |\n *                                             \\______/\n */\n\n// Watch out - Generics are scarry!\n\ntype AnyFunction = (...args: any) => any;\ntype AnyConstructor = (new (...args: any) => any) | (abstract new (...args: any) => any);\ntype AnyConstructorWithCallSignature = AnyConstructor & AnyFunction;\n\ninterface ImprovedProxyHandler_Constructor<TObj extends AnyConstructor> extends ImprovedProxyHandler_Object<TObj> {\n    /**\n     * A trap for the `new` operator.\n     * @param target The original object which is being proxied.\n     * @param argArray The arguments for the call.\n     * @param newTarget The constructor that was originally called.\n     */\n    construct?(target: TObj, argArray: any[], newTarget: (ConstructorParameters<TObj>)): object;\n}\ninterface ImprovedProxyHandler_Function<TObj extends AnyFunction> extends ImprovedProxyHandler_Object<TObj> {\n    /**\n     * A trap method for a function call.\n     * @param target The original callable object which is being proxied.\n     * @param thisArg The `this` argument for the call.\n     * @param argArray The arguments for the call.\n     */\n    apply?(target: TObj, thisArg: ThisParameterType<TObj>, argArray: Parameters<TObj>): any;\n}\n\ntype ImprovedProxyHandler_ConstructorWithCallSignature<TObj extends AnyConstructorWithCallSignature> = ImprovedProxyHandler_Constructor<TObj> & ImprovedProxyHandler_Function<TObj>;\n\n// @ts-ignore: TypeScript doesn't like me overwriting the bad default types.\ninterface ImprovedProxyHandler_Object<TObj extends object> extends ProxyHandler<TObj> {\n    /** DO NOT USE - THIS OBJECT CANNOT BE CONSTRUCTED */\n    apply?: any;\n\n    /** DO NOT USE - THIS OBJECT CANNOT BE CONSTRUCTED */\n    construct?: any;\n\n    /**\n     * A trap for `Object.defineProperty()`.\n     * @param target The original object which is being proxied.\n     * @returns A `Boolean` indicating whether or not the property has been defined.\n     */\n    defineProperty?(target: TObj, property: keyof TObj, attributes: PropertyDescriptor): boolean;\n\n    /**\n     * A trap for the `delete` operator.\n     * @param target The original object which is being proxied.\n     * @param property The name or `Symbol` of the property to delete.\n     * @returns A `Boolean` indicating whether or not the property was deleted.\n     */\n    deleteProperty?(target: TObj, property: keyof TObj): boolean;\n\n    /**\n     * A trap for getting a property value.\n     * @param target The original object which is being proxied.\n     * @param propertyThe name or `Symbol` of the property to get.\n     * @param receiver The proxy or an object that inherits from the proxy.\n     */\n    get?<TProperty extends keyof TObj>(target: TObj, property: TProperty, receiver: any): TObj[TProperty];\n\n    /**\n     * A trap for `Object.getOwnPropertyDescriptor()`.\n     * @param target The original object which is being proxied.\n     * @param propertyThe name of the property whose description should be retrieved.\n     */\n    getOwnPropertyDescriptor?<TProperty extends keyof TObj>(target: TObj, property: TProperty): PropertyDescriptor | undefined;\n\n    /**\n     * A trap for the `[[GetPrototypeOf]]` internal method.\n     * @param target The original object which is being proxied.\n     */\n    getPrototypeOf?(target: TObj): object | null;\n\n    /**\n     * A trap for the `in` operator.\n     * @param target The original object which is being proxied.\n     * @param propertyThe name or `Symbol` of the property to check for existence.\n     */\n    has?(target: TObj, property: string|number|symbol): boolean;\n\n    /**\n     * A trap for `Object.isExtensible()`.\n     * @param target The original object which is being proxied.\n     */\n    isExtensible?(target: TObj): boolean;\n\n    /**\n     * A trap for `Reflect.ownKeys()`.\n     * @param target The original object which is being proxied.\n     */\n    ownKeys?(target: TObj): ArrayLike<keyof TObj>;\n\n    /**\n     * A trap for `Object.preventExtensions()`.\n     * @param target The original object which is being proxied.\n     */\n    preventExtensions?(target: TObj): boolean;\n\n    /**\n     * A trap for setting a property value.\n     * @param target The original object which is being proxied.\n     * @param propertyThe name or `Symbol` of the property to set.\n     * @param receiver The object to which the assignment was originally directed.\n     * @returns A `Boolean` indicating whether or not the property was set.\n     */\n    set?<TProperty extends keyof TObj>(target: TObj, property: TProperty, newValue: TObj[TProperty], receiver: any): boolean;\n\n    /**\n     * A trap for `Object.setPrototypeOf()`.\n     * @param target The original object which is being proxied.\n     * @param newPrototype The object's new prototype or `null`.\n     */\n    setPrototypeOf?(target: TObj, newPrototype: object | null): boolean;\n}\n\ndeclare global {\n    type ImprovedProxyHandler<TObj extends object> =\n      TObj extends AnyConstructorWithCallSignature ? ImprovedProxyHandler_ConstructorWithCallSignature<TObj>\n    : TObj extends AnyConstructor                  ? ImprovedProxyHandler_Constructor<TObj>\n    : TObj extends AnyFunction                     ? ImprovedProxyHandler_Function<TObj>\n    :                                                ImprovedProxyHandler_Object<TObj>\n}\n\n\nexport function setProxies<TObj extends object>(obj: TObj, handler: ImprovedProxyHandler<TObj>, runOnEach?: (obj: TObj) => unknown): TObj {\n    if (!obj || typeof obj !== 'object') return obj;\n\n\n\n    if (handler.set) {\n        const oldSetter = handler.set;\n        const wrappedSetter: ImprovedProxyHandler<TObj>['set'] = (target, prop, value, receiver) => {\n            if (prop in target && target[prop] === value) return true;\n\n            if (value && typeof value === 'object') value = setProxies(value, handler, runOnEach) as any;\n\n            return oldSetter.call(handler, target, prop, value, receiver) ?? true;\n        };\n\n        handler.set = wrappedSetter;\n    }\n\n    for (const [key, value] of Object.entries(obj)) {\n        runOnEach?.(value);\n\n        if (!value || typeof value !== 'object') continue;\n        obj[key as keyof TObj] = new Proxy(setProxies(value, handler, runOnEach), handler) as any;\n    }\n\n    return new Proxy(obj, handler) as TObj;\n}\n\n// ==================================\n// ======== NUMBER UTILITIES ========\n// ==================================\n\n/** Returns a random integer between min (inclusive) and max (inclusive) with precision up to the specified number of decimal places\n    @param min The minimum value that this function should return\n    @param max The maximum value that this function should return\n    @param places The number of decimal places the returned number should include\n*/\nexport function randomNumber(min = 0, max = 1, places = 0):number{\n    const placesMult = Math.pow(10, places);\n    return (\n        Math.round(\n            (\n                Math.random() * (max - min) + min\n            ) * placesMult\n        ) / placesMult\n    );\n}\n\n\n/***\n *    $$$$$$$\\   $$$$$$\\  $$\\      $$\\       $$\\   $$\\   $$\\     $$\\ $$\\ $$\\   $$\\     $$\\\n *    $$  __$$\\ $$  __$$\\ $$$\\    $$$ |      $$ |  $$ |  $$ |    \\__|$$ |\\__|  $$ |    \\__|\n *    $$ |  $$ |$$ /  $$ |$$$$\\  $$$$ |      $$ |  $$ |$$$$$$\\   $$\\ $$ |$$\\ $$$$$$\\   $$\\  $$$$$$\\   $$$$$$$\\\n *    $$ |  $$ |$$ |  $$ |$$\\$$\\$$ $$ |      $$ |  $$ |\\_$$  _|  $$ |$$ |$$ |\\_$$  _|  $$ |$$  __$$\\ $$  _____|\n *    $$ |  $$ |$$ |  $$ |$$ \\$$$  $$ |      $$ |  $$ |  $$ |    $$ |$$ |$$ |  $$ |    $$ |$$$$$$$$ |\\$$$$$$\\\n *    $$ |  $$ |$$ |  $$ |$$ |\\$  /$$ |      $$ |  $$ |  $$ |$$\\ $$ |$$ |$$ |  $$ |$$\\ $$ |$$   ____| \\____$$\\\n *    $$$$$$$  | $$$$$$  |$$ | \\_/ $$ |      \\$$$$$$  |  \\$$$$  |$$ |$$ |$$ |  \\$$$$  |$$ |\\$$$$$$$\\ $$$$$$$  |\n *    \\_______/  \\______/ \\__|     \\__|       \\______/    \\____/ \\__|\\__|\\__|   \\____/ \\__| \\_______|\\_______/\n *\n *\n *\n */\n\ninterface DocAndElementInjections {\n    /** Returns the first element with the specified tag name or creates one if it does not exist */\n    getOrCreateChildByTag<K extends keyof HTMLElementTagNameMap>(tagName: K): HTMLElementTagNameMap[K];\n    getOrCreateChildByTag(tagName: string):Element;\n\n    removeChildByTag<K extends keyof HTMLElementTagNameMap>(tagName: K, count?: number): void;\n    removeChildByTag(tagName: string, count?: number): void;\n}\n\ndeclare global {\n    interface Element extends DocAndElementInjections {\n        upgrades?: ComponentMap;\n        targetingComponents?: ComponentMap;\n    }\n    interface Document extends DocAndElementInjections {}\n\n    interface HTMLElement extends DocAndElementInjections {\n        onclick: EventTypes<HTMLElement>['activate']|null;\n    }\n\n    interface Window {\n        domParser: DOMParser;\n\n        /** A list of functions used when loading scripts */\n        bcd_init_functions: Record<string, Function>;\n\n        copyCode(elem: HTMLElement): void;\n\n        BCDSettingsDropdown: typeof BCDSettingsDropdown;\n    }\n}\nwindow.domParser = new DOMParser();\n\n/** Forces an HTMLElement to be focusable by the user and then focuses it\n    @param element The element to focus\n    @param preventScrolling Whether or not to prevent the page from scrolling to the element. Defaults to true.\n*/\nexport function focusAnyElement(element:HTMLElement|undefined, preventScrolling: boolean = true):void{\n    if (!element || !element.focus) return;\n\n    const hadTabIndex = element.hasAttribute('tabindex');\n    if (!hadTabIndex) element.setAttribute('tabindex', '-8311');\n\n    element.focus({preventScroll: preventScrolling});\n\n    // Wrap inside two requestAnimationFrame calls to ensure the browser could focus the element before removing the tabindex attribute.\n    nestAnimationFrames(2, () => {\n        if (!hadTabIndex) element.removeAttribute('tabindex');\n    });\n}\n\n\nexport function copyCode(elem: HTMLElement): void {\n    if (!elem) throw new Error(\"No element provided to copyCode with!\");\n\n    //console.debug(\"copyCode\", elem);\n\n    // Get code\n    const codeElem = elem.parentElement?.querySelector('code');\n    if (!codeElem) throw new Error(\"No code element found to copy from!\");\n\n    // Write code to clipboard (after trimming the whitespace)\n    navigator.clipboard.writeText(trimWhitespace(codeElem.textContent ?? '', true));\n\n    // Select text (UX stunt)\n    const selection = window.getSelection()!;\n    const tempRange = new Range();\n    tempRange.selectNode(codeElem);\n    selection.removeAllRanges(); selection.addRange(tempRange);\n}\nwindow.copyCode = copyCode;\n\n\nexport function getInputValue(input: HTMLInputElement): string {\n    return input.value || input.getAttribute('bcdPlaceholder') || input.placeholder || '';\n}\n\n\nfunction ___getOrCreateChild(this:Document|Element, tagName: string) {\n    let child = this.getElementsByTagName(tagName)[0];\n\n    if (!child) {\n        const doc = this instanceof Document ? this : this.ownerDocument;\n        //console.debug(`Creating ${tagName} element for`, this);\n        child = doc.createElement(tagName, {is: tagName});\n        this.appendChild(child);\n    }\n\n    return child;\n}\nElement.prototype.getOrCreateChildByTag = ___getOrCreateChild;\nDocument.prototype.getOrCreateChildByTag = ___getOrCreateChild;\n\nfunction ___removeChildByTag(this:Document|Element, tagName: string, count: number = 1) {\n    const children = [...this.getElementsByTagName(tagName)];\n    let removedCount = 0;\n    for (let i = 0; removedCount <= count && i < children.length; i++) {\n        const child = children[i];\n        if (!child || child.tagName !== tagName) continue;\n\n        child.remove();\n        removedCount++;\n    }\n}\n\nElement.prototype.removeChildByTag = ___removeChildByTag;\nDocument.prototype.removeChildByTag = ___removeChildByTag;\n\n/***\n *     $$$$$$\\              $$\\           $$\\   $$\\   $$\\     $$\\ $$\\ $$\\   $$\\     $$\\\n *    $$  __$$\\             $$ |          $$ |  $$ |  $$ |    \\__|$$ |\\__|  $$ |    \\__|\n *    $$ /  \\__| $$$$$$\\  $$$$$$\\         $$ |  $$ |$$$$$$\\   $$\\ $$ |$$\\ $$$$$$\\   $$\\  $$$$$$\\   $$$$$$$\\\n *    \\$$$$$$\\  $$  __$$\\ \\_$$  _|        $$ |  $$ |\\_$$  _|  $$ |$$ |$$ |\\_$$  _|  $$ |$$  __$$\\ $$  _____|\n *     \\____$$\\ $$$$$$$$ |  $$ |          $$ |  $$ |  $$ |    $$ |$$ |$$ |  $$ |    $$ |$$$$$$$$ |\\$$$$$$\\\n *    $$\\   $$ |$$   ____|  $$ |$$\\       $$ |  $$ |  $$ |$$\\ $$ |$$ |$$ |  $$ |$$\\ $$ |$$   ____| \\____$$\\\n *    \\$$$$$$  |\\$$$$$$$\\   \\$$$$  |      \\$$$$$$  |  \\$$$$  |$$ |$$ |$$ |  \\$$$$  |$$ |\\$$$$$$$\\ $$$$$$$  |\n *     \\______/  \\_______|   \\____/        \\______/    \\____/ \\__|\\__|\\__|   \\____/ \\__| \\_______|\\_______/\n *\n *\n *\n */\n\ndeclare global {\n    interface Set<T> {\n        /** Changes the position of an item in the set relative to another item\n         * @returns Whether or not the item could be moved\n        */\n        moveItem: typeof ___moveItem;\n\n        /** Changes the position of an item in the set using a provided index\n         * @returns Whether or not the item could be moved\n        */\n        moveIndex: typeof ___moveIndex;\n    }\n}\n\n/** Changes the position of an item in the set\n * @returns Whether or not the item could be moved\n*/\nfunction ___moveItem<T>(this: Set<T>, item:T, newAdjacentItem:T, relativePosition:'above'|'below' = 'below'): boolean {\n    if (!this.has(item) || !this.has(newAdjacentItem)) return false;\n\n    const arr = [...this];\n    const itemIndex = arr.indexOf(item);\n    const adjacentIndex = arr.indexOf(newAdjacentItem);\n\n    if (itemIndex === -1 || adjacentIndex === -1) return false;\n\n    arr.splice(itemIndex, 1);\n    arr.splice(adjacentIndex + (relativePosition === 'below' ? 1 : 0), 0, item);\n\n    this.clear();\n    arr.forEach(i => this.add(i));\n\n    return true;\n}\nSet.prototype.moveItem = ___moveItem;\n\n/** Changes the position of an item in the set using a provided index\n * @returns Whether or not the item could be moved\n * @param newIndex The new index of the item. If the index is negative, it will be treated as an offset from the end of the array.\n*/\nfunction ___moveIndex<T>(this: Set<T>, item:T, newIndex: number): boolean {\n    if (!this.has(item)) return false;\n\n    const arr = [...this];\n\n    const itemIndex = arr.indexOf(item);\n    if (itemIndex === -1) return false;\n\n    if (newIndex < 0) newIndex = arr.length + newIndex;\n\n    arr.splice(itemIndex, 1);\n    arr.splice(newIndex, 0, item);\n\n    this.clear();\n    arr.forEach(i => this.add(i));\n\n    return true;\n}\nSet.prototype.moveIndex = ___moveIndex;\n\nexport function getSetIndex<TStepType>(set: Set<TStepType>, index: number): TStepType|undefined {\n    let i = 0;\n    for (const item of set) {\n        if (i === index) return item;\n        i++;\n    }\n}\n\nfunction ___getExtends<K extends abstract new (...args: any[]) => unknown>(this: ComponentMap, type: K) {\n    const returnVal:InstanceType<K>[] = [];\n    for (const [,value] of this) if (value instanceof type) returnVal.push(value as InstanceType<K>);\n    return returnVal;\n}\n\nexport function registerUpgrade(subject: Element, upgrade: InstanceType<Component>, target?: Element|null, propagateToTargetChildren = false, propagateToSubjectToChildren = false): void {\n    //console.log(\"registerUpgrade\", {subject, upgrade, target, propagateToTargetChildren, propagateSubjectToChildren: propagateToSubjectToChildren});\n    // Set the upgrade on the subject\n    forEachChildAndOrParent(subject, propagateToSubjectToChildren, child => {\n        //console.log(\"registerUpgrade: subject\", child);\n        if (!child.upgrades) {\n            const map = new Map() as ComponentMap;\n            map.getExtends = ___getExtends;\n            child.upgrades = map;\n        }\n\n        child.upgrades.set(upgrade.constructor, upgrade);\n    });\n\n    // Repeat for target\n    if (target) forEachChildAndOrParent(target, propagateToTargetChildren, child => {\n        if (!child.targetingComponents) {\n            const map = new Map() as ComponentMap;\n            map.getExtends = ___getExtends;\n            child.targetingComponents = map;\n        }\n\n        child.targetingComponents.set(upgrade.constructor, upgrade);\n    });\n}\n\nfunction forEachChildAndOrParent(start: Element, doChildren: boolean, callback: (child: Element) => unknown): void {\n    if (doChildren) forEachChild(start, callback);\n    callback(start);\n}\n\nfunction forEachChild(start: Element, callback: (child: Element) => void): void {\n    for (let i = 0; i < start.children.length; i++) {\n        forEachChild(start.children[i]!, callback);\n        callback(start.children[i]!);\n    }\n}\n\n/** Quick-and-dirty enum of strings used often throughout the code */\nenum strs {\n    transitionDur = \"transition-duration\",\n    animDur = \"animation-duration\",\n    marginTop = \"margin-top\",\n    classIsOpen = \"is-open\",\n    classAdjacent = \"adjacent\",\n    classDetailsInner = \"js-bcd-details-inner\",\n    errItem = \"Error Item:\"\n}\n\nwindow.queryParams = {};\n\nif (window.location.search[0] === '?')\n    window.location.search.substring(1).split('&')\n                            .map(param => param.split('='))\n                            .forEach(param => window.queryParams[param[0]!.trim()] = param[1]?.trim() ?? '');\n\n\n/***\n *     $$$$$$\\                                                                              $$\\\n *    $$  __$$\\                                                                             $$ |\n *    $$ /  \\__| $$$$$$\\  $$$$$$\\$$$$\\   $$$$$$\\   $$$$$$\\  $$$$$$$\\   $$$$$$\\  $$$$$$$\\  $$$$$$\\\n *    $$ |      $$  __$$\\ $$  _$$  _$$\\ $$  __$$\\ $$  __$$\\ $$  __$$\\ $$  __$$\\ $$  __$$\\ \\_$$  _|\n *    $$ |      $$ /  $$ |$$ / $$ / $$ |$$ /  $$ |$$ /  $$ |$$ |  $$ |$$$$$$$$ |$$ |  $$ |  $$ |\n *    $$ |  $$\\ $$ |  $$ |$$ | $$ | $$ |$$ |  $$ |$$ |  $$ |$$ |  $$ |$$   ____|$$ |  $$ |  $$ |$$\\\n *    \\$$$$$$  |\\$$$$$$  |$$ | $$ | $$ |$$$$$$$  |\\$$$$$$  |$$ |  $$ |\\$$$$$$$\\ $$ |  $$ |  \\$$$$  |\n *     \\______/  \\______/ \\__| \\__| \\__|$$  ____/  \\______/ \\__|  \\__| \\_______|\\__|  \\__|   \\____/\n *                                      $$ |\n *                                      $$ |\n *                                      \\__|\n *    $$$$$$$$\\                               $$\\\n *    \\__$$  __|                              $$ |\n *       $$ |    $$$$$$\\   $$$$$$\\   $$$$$$$\\ $$ |  $$\\  $$$$$$\\   $$$$$$\\\n *       $$ |   $$  __$$\\  \\____$$\\ $$  _____|$$ | $$  |$$  __$$\\ $$  __$$\\\n *       $$ |   $$ |  \\__| $$$$$$$ |$$ /      $$$$$$  / $$$$$$$$ |$$ |  \\__|\n *       $$ |   $$ |      $$  __$$ |$$ |      $$  _$$<  $$   ____|$$ |\n *       $$ |   $$ |      \\$$$$$$$ |\\$$$$$$$\\ $$ | \\$$\\ \\$$$$$$$\\ $$ |\n *       \\__|   \\__|       \\_______| \\_______|\\__|  \\__| \\_______|\\__|\n *\n *\n *\n */\n\n/** Any component that can be automatically created by Material Design Lite */\nexport interface Component {\n    new(element: any, ...args: any[]): any;\n}\n\n/** Any component that defines the readonly `cssClass` and `asString` properties */\nexport interface BCDComponent extends Component {\n    readonly asString: string;\n    readonly cssClass: string;\n}\n\n// Create a map that guarantee an instance of the key\nexport type ComponentMap = Map<Component, InstanceType<Component>> & {\n    get<K extends Component>(key: K): InstanceType<K>|undefined;\n    set<K extends Component>(key: K, value: InstanceType<K>): ComponentMap;\n\n    /** Fetches all classes that extend the specified class */\n    getExtends<K extends abstract new(...args:any[])=>unknown>(key: K): InstanceType<K>[];\n}\n\n/** Variable to store components that we'll be registering on DOM initialization */\nconst componentsToRegister:BCDComponent[] = [];\n\n/** Registers a single MDL component that has the static readonly properties `cssClass` and `asString` defined\n    @param component The BCDComponent to register\n    @throws nothing - this function gracefully handles errors in the form of `console.error` calls instead of throwing actual errors\n    @returns whether or not an error occurred with the error as the return value\n*/\nexport function registerBCDComponent(component:BCDComponent):boolean|Error {\n    try{\n\n        mdl.componentHandler.register({\n            constructor: component,\n            classAsString: component.asString,\n            cssClass: component.cssClass,\n            widget: false\n        });\n        mdl.componentHandler.upgradeElements(document.getElementsByClassName(component.cssClass));\n\n    }catch(e:unknown){\n        console.error(\"[BCD-Components] Error registering component\", component.asString, \"with class\", component.cssClass, \":\\n\", e);\n        return e as Error;\n\n    }\n\n    return false;\n}\n\n\n/** Tell MDL about our shiny new components\n    @param components The components to register. Defaults to the global bcdComponents array if not specified.\n*/\nexport function registerBCDComponents(...components:BCDComponent[]):void{\n\n    const componentArr = components.length ? components : componentsToRegister;\n\n    // Tell mdl about our shiny new components\n    for (let i = 0; i < componentArr.length; i++) {\n        registerBCDComponent(componentArr[i]!);\n    }\n\n    //console.debug(\"[BCD-Components] Registered the following components:\", componentArr.map(c => `\\n    ${c.asString}`).join(''));\n}\n\n\n\n/***\n *     $$$$$$\\            $$\\ $$\\                               $$\\ $$\\       $$\\\n *    $$  __$$\\           $$ |$$ |                              \\__|$$ |      $$ |\n *    $$ /  \\__| $$$$$$\\  $$ |$$ | $$$$$$\\   $$$$$$\\   $$$$$$$\\ $$\\ $$$$$$$\\  $$ | $$$$$$\\\n *    $$ |      $$  __$$\\ $$ |$$ | \\____$$\\ $$  __$$\\ $$  _____|$$ |$$  __$$\\ $$ |$$  __$$\\\n *    $$ |      $$ /  $$ |$$ |$$ | $$$$$$$ |$$ /  $$ |\\$$$$$$\\  $$ |$$ |  $$ |$$ |$$$$$$$$ |\n *    $$ |  $$\\ $$ |  $$ |$$ |$$ |$$  __$$ |$$ |  $$ | \\____$$\\ $$ |$$ |  $$ |$$ |$$   ____|\n *    \\$$$$$$  |\\$$$$$$  |$$ |$$ |\\$$$$$$$ |$$$$$$$  |$$$$$$$  |$$ |$$$$$$$  |$$ |\\$$$$$$$\\\n *     \\______/  \\______/ \\__|\\__| \\_______|$$  ____/ \\_______/ \\__|\\_______/ \\__| \\_______|\n *                                          $$ |\n *                                          $$ |\n *                                          \\__|\n */\n\n\n\nexport abstract class BCD_CollapsibleParent {\n    // For children to set\n    details!:HTMLElement;\n    details_inner!:HTMLElement;\n    summary!:HTMLElement;\n    openIcons90deg!:HTMLCollection;\n\n    // For us to set\n    self:HTMLElement;\n    adjacent:boolean = false;\n\n    constructor(elm:HTMLElement){\n        this.self = elm;\n        this.adjacent = elm.classList.contains(strs.classAdjacent);\n    }\n\n    isOpen():boolean {//this.debugCheck();\n        return this.details.classList.contains(strs.classIsOpen) || this.summary.classList.contains(strs.classIsOpen);\n    }\n\n    /** Toggle the collapsible menu. */\n    toggle(doSetDuration:boolean = true) {//this.debugCheck();\n        if (this.isOpen()) { this.close(doSetDuration); } else { this.open(doSetDuration); }\n    }\n\n    /** Re-evaluate the collapsible's current state. */\n    reEval(doSetDuration?:false):void\n    reEval(doSetDuration?:true, instant?:true):void\n    reEval(doSetDuration:boolean = true, instant?:true):void {\n            requestAnimationFrame(() => {\n                if (this.isOpen()) this.open(doSetDuration, instant);\n                else this.close(doSetDuration, instant);\n            }\n        );\n    }\n\n    stateChangePromise(desiredState?:boolean):Promise<void>{\n\n        if ((desiredState !== undefined && this.isOpen() === desiredState)\n            || getComputedStyle(this.details_inner).transitionDuration === '0s') {\n                return new Promise((resolve) => requestAnimationFrame(()=>{   this.onTransitionEnd(); resolve();  }) );\n        }\n\n        const transitionEndFunct = this.onTransitionEnd.bind(this);\n\n        return new Promise<void>((resolve) => {\n            function listener(event: TransitionEvent) {\n                if (event.propertyName !== 'margin-top') return;\n                removeListener();\n                afterDelay(10, ()=>  {transitionEndFunct(event); resolve();}  );\n            }\n\n            this.details_inner.addEventListener('transitionend', listener);\n\n            // Implemented as a separate function because it \"avoids\" a cyclic reference.\n            const details_inner = this.details_inner;\n            function removeListener(){ details_inner.removeEventListener('transitionend', listener); }\n        });\n    }\n\n    /** Open the collapsible menu content */\n    open(doSetDuration = true, instant = false) {//this.debugCheck();\n        const returnVal = this.stateChangePromise(true);\n\n        if (!instant) this.evaluateDuration(doSetDuration);\n\n        this.details_inner.ariaHidden = 'false';\n        this.details_inner.style.visibility = 'visible';\n        BCD_CollapsibleParent.setDisabled(this.details_inner, false, false);\n\n        this.details.classList.add(strs.classIsOpen);\n        this.summary.classList.add(strs.classIsOpen);\n\n        nestAnimationFrames(3, () => {\n\n            this.details_inner.style.marginTop = this.details.getAttribute('data-margin-top') || '0';\n\n            if (instant) nestAnimationFrames(2, ()=>\n                this.evaluateDuration.bind(this, doSetDuration, true)\n            );\n\n        });\n\n        if (instant) return this.instantTransition();\n\n        return returnVal;\n    }\n\n    hasClosedFinal = false;\n    /** Close the collapsible content */\n    close(doSetDuration:boolean = true, instant = false, final = false, duration?: number) {\n        //console.log(`Closing collapsible - doSetDuration: ${doSetDuration}, instant: ${instant}, final: ${final}, duration: ${duration}`);\n\n        if (this.hasClosedFinal) return;\n\n        if (final){\n            this.summary.upgrades!.getExtends(BCD_CollapsibleParent)[0]!.hasClosedFinal = true;\n            this.details.upgrades!.getExtends(BCD_CollapsibleParent)[0]!.hasClosedFinal = true;\n        }\n\n        if (duration === undefined) this.evaluateDuration(doSetDuration, false);\n        else this.details_inner.style.transitionDuration = `${duration}ms`;\n\n        const returnVal = this.stateChangePromise(false);\n\n        // Registers for the event twice because the event appears to fire twice, at least in Chromium browsers.\n        this.details_inner.style.marginTop = `-${this.details_inner.offsetHeight + 32}px`;\n\n        this.details.classList.remove(strs.classIsOpen);\n        this.summary.classList.remove(strs.classIsOpen);\n        BCD_CollapsibleParent.setDisabled(this.details_inner, true);\n\n        if (instant) {\n            nestAnimationFrames(2, () => this.evaluateDuration(doSetDuration, false) );\n            return this.instantTransition();\n        }\n\n        if (final) this.summary.style.pointerEvents = 'none';\n\n        return returnVal;\n    }\n\n    onTransitionEnd(event?:TransitionEvent):void {\n        if (event && event.propertyName !== 'margin-top') return;\n\n        if (this.isOpen()) {\n            BCD_CollapsibleParent.setDisabled(this.details_inner, false);\n            return;\n        }\n\n        requestAnimationFrame(() => {\n            this.details_inner.ariaHidden = 'true';\n            this.details_inner.style.visibility = 'none';\n            BCD_CollapsibleParent.setDisabled(this.details_inner, true);\n        });\n    }\n\n    instantTransition(): Promise<void> {\n        if (this.details_inner) {\n            this.details_inner.style.transitionDuration = `0s`;\n            this.details_inner.style.animationDuration = `0s`;\n            for (const icon of this.openIcons90deg) {\n                (icon as HTMLElement).style.animationDuration = `0s`;\n            }\n        }\n        this.onTransitionEnd();\n        return new Promise((r) => r());\n    }\n\n    static setDisabled(elm:HTMLElement, disabled:boolean, allowPointerEvents = true):void {\n        for (const child of elm.children)\n            this.setDisabled(child as HTMLElement, disabled);\n\n        const wasDisabled = elm.getAttribute('data-was-disabled') as 'true'|'false'|null;\n        const oldTabIndex = elm.getAttribute('data-old-tabindex');\n\n        const forcePointerEvents = elm.getAttribute('data-force-pointer-events') as 'true'|'false'|null;\n        if (forcePointerEvents !== null) allowPointerEvents = (forcePointerEvents === 'true');\n\n        const forceDisabled = elm.getAttribute('data-force-disabled') as 'true'|'false'|null;\n        if (forceDisabled !== null) disabled = (forceDisabled === 'true');\n\n        if (disabled) {\n            if (wasDisabled === null) elm.setAttribute('data-was-disabled', elm.hasAttribute('disabled') ? 'true' : 'false');\n            elm.setAttribute('disabled', '');\n            elm.ariaDisabled = 'true';\n\n            if (oldTabIndex === null) elm.setAttribute('data-old-tabindex', elm.getAttribute('tabindex') || '');\n            elm.tabIndex = -1;\n\n            //console.log('set disabled', elm instanceof HTMLElement, elm);\n\n        } else {\n            elm.removeAttribute('data-was-disabled');\n\n            if (wasDisabled === 'true') elm.setAttribute('disabled', '');\n            else elm.removeAttribute('disabled');\n\n            elm.ariaDisabled = wasDisabled === 'true' ? 'true' : 'false';\n\n            if (oldTabIndex !== null || elm.hasAttribute('data-old-tabindex')) {\n                oldTabIndex ? elm.setAttribute('tabindex', oldTabIndex) : elm.removeAttribute('tabindex');\n                elm.removeAttribute('data-old-tabindex');\n            }\n        }\n\n        elm.style.pointerEvents = allowPointerEvents ? '' : 'none';\n\n    }\n\n    /* Determines what the transition and animation duration of the collapsible menu is */\n    evaluateDuration(doRun:boolean = true, opening:boolean=true) {//this.debugCheck();\n        if (doRun && this.details_inner) {\n            const contentHeight = this.details_inner.offsetHeight;\n            this.details_inner.style.transitionDuration = `${(opening ? 250 : 300) + ((opening ? 0.3 : 0.35) * (contentHeight + 32))}ms`;\n            for (const icon of this.openIcons90deg) {\n                (icon as HTMLElement).style.transitionDuration = `${ 250 + (0.15 * (contentHeight + 32)) }ms`;\n            }\n        }\n    }\n}\n\nexport class BCDDetails extends BCD_CollapsibleParent {\n    static readonly cssClass = \"js-bcd-details\";\n    static readonly asString = \"BellCubicDetails\";\n\n    /** @param {HTMLElement} element */\n    constructor(element:HTMLElement) {\n        super(element);\n        this.details = element;\n\n        // Create a container element to make animation go brrr\n        // Slightly over-complicated because, uh, DOM didn't want to cooperate.\n        this.details_inner = document.createElement('div');\n        this.details_inner.classList.add(strs.classDetailsInner);\n\n        // The `children` HTMLCollection is live, so we're fetching each element and throwing it into an array...\n        const temp_childrenArr:ChildNode[] = [];\n        for (const node of this.details.childNodes){\n            temp_childrenArr.push(node);\n        }\n        // ...and actually moving the elements into the new div here.\n        for (const node of temp_childrenArr){\n            this.details_inner.appendChild(node);\n        }\n\n        this.details.appendChild(this.details_inner);\n\n        if (this.adjacent) {\n            const temp_summary = this.self.previousElementSibling;\n            if (!temp_summary || !temp_summary.classList.contains(BCDSummary.cssClass)) /* Throw an error*/ {console.log(strs.errItem, this); throw new TypeError(\"[BCD-DETAILS] Error: Adjacent Details element must be preceded by a Summary element.\");}\n            this.summary = temp_summary as HTMLElement;\n        } else {\n            const temp_summary = this.self.ownerDocument.querySelector(`.js-bcd-summary[for=\"${this.details.id}\"`);\n            if (!temp_summary) /* Throw an error*/ {console.log(strs.errItem, this); throw new TypeError(\"[BCD-DETAILS] Error: Non-adjacent Details elements must have a Summary element with a `for` attribute matching the Details element's id.\");}\n            this.summary = temp_summary as HTMLElement;\n        }\n\n        this.openIcons90deg = this.summary.getElementsByClassName('open-icon-90CC');\n\n        const boundReEval = this.reEvalIfClosed.bind(this);\n\n        const observer = new ResizeObserver(boundReEval);\n        observer.observe(this.details_inner);\n\n        this.reEval(true, true);\n        this.self.classList.add('initialized');\n\n        registerUpgrade(this.self, this, this.summary, true);\n    }\n\n    reEvalIfClosed() {\n        if (!this.isOpen()) this.reEval(true, true);\n    }\n}\ncomponentsToRegister.push(BCDDetails);\n\nexport class BCDSummary extends BCD_CollapsibleParent {\n    static readonly cssClass = 'js-bcd-summary';\n    static readonly asString = 'BellCubicSummary';\n\n    constructor(element:HTMLElement) {\n        super(element);\n        this.summary = element;\n        registerForEvents(this.summary, {activate: this.activate.bind(this)});\n        this.openIcons90deg = this.summary.getElementsByClassName('open-icon-90CC');\n\n        if (this.adjacent) {\n            const temp_details = this.self.nextElementSibling;\n            if (!(temp_details && temp_details.classList.contains(BCDDetails.cssClass))) /* Throw an error*/ {console.log(strs.errItem, this); throw new TypeError(\"[BCD-SUMMARY] Error: Adjacent Summary element must be proceeded by a Details element.\");}\n            this.details = temp_details as HTMLElement;\n        } else {\n            const temp_details = this.self.ownerDocument.getElementById(this.summary.getAttribute('for') ?? '');\n            if (!temp_details) /* Throw an error*/ {console.log(strs.errItem, this); throw new TypeError(\"[BCD-SUMMARY] Error: Non-adjacent Details elements must have a summary element with a `for` attribute matching the Details element's id.\");}\n            this.details = temp_details as HTMLElement;\n        }\n\n        this.divertedCompletion();\n\n        registerUpgrade(this.self, this, this.details, false, true);\n    }\n\n    divertedCompletion(){queueMicrotask(()=>{\n\n        const temp_inner = this.details.querySelector(`.${strs.classDetailsInner}`);\n        if (!temp_inner) {this.divertedCompletion(); return;}\n\n        this.details_inner = temp_inner as HTMLElement;\n\n        this.reEval(true, true);\n        this.self.classList.add('initialized');\n    });}\n\n    correctFocus(keyDown?: boolean) {\n        if (keyDown) focusAnyElement(this.summary as HTMLElement);\n        else return nestAnimationFrames(2, () => {\n            this.summary.blur();\n        });\n    }\n\n    activate(event?:MouseEvent|KeyboardEvent){\n        //console.log(event);\n        if (!event) return;\n\n        if (\n            // Make sure the pointer type is valid\n            (('pointerType' in event) && !event.pointerType)\n\n            // Reject the event if there's an <a> element within the first 5 elements of the path\n            || ('path' in event && event.path && event.path instanceof Array && event.path?.slice(0, 5).some((el:HTMLElement) => el.tagName === 'A'))\n        ) return;\n\n        this.toggle();\n        this.correctFocus(event instanceof KeyboardEvent);\n    }\n}\ncomponentsToRegister.push(BCDSummary);\n\n/***\n *    $$$$$$$\\                        $$\\       $$\\                  $$$$$\\  $$$$$$\\   $$$$$$\\  $$\\   $$\\\n *    $$  __$$\\                       $$ |      $$ |                 \\__$$ |$$  __$$\\ $$  __$$\\ $$$\\  $$ |\n *    $$ |  $$ | $$$$$$\\   $$$$$$\\  $$$$$$\\   $$$$$$\\   $$\\   $$\\       $$ |$$ /  \\__|$$ /  $$ |$$$$\\ $$ |\n *    $$$$$$$  |$$  __$$\\ $$  __$$\\ \\_$$  _|  \\_$$  _|  $$ |  $$ |      $$ |\\$$$$$$\\  $$ |  $$ |$$ $$\\$$ |\n *    $$  ____/ $$ |  \\__|$$$$$$$$ |  $$ |      $$ |    $$ |  $$ |$$\\   $$ | \\____$$\\ $$ |  $$ |$$ \\$$$$ |\n *    $$ |      $$ |      $$   ____|  $$ |$$\\   $$ |$$\\ $$ |  $$ |$$ |  $$ |$$\\   $$ |$$ |  $$ |$$ |\\$$$ |\n *    $$ |      $$ |      \\$$$$$$$\\   \\$$$$  |  \\$$$$  |\\$$$$$$$ |\\$$$$$$  |\\$$$$$$  | $$$$$$  |$$ | \\$$ |\n *    \\__|      \\__|       \\_______|   \\____/    \\____/  \\____$$ | \\______/  \\______/  \\______/ \\__|  \\__|\n *                                                      $$\\   $$ |\n *                                                      \\$$$$$$  |\n *                                                       \\______/\n */\n\n/** Simple MDL Class to handle making JSON pretty again\n    Takes the textContent of the element and parses it as JSON, then re-serializes it with 2 spaces per indent.\n*/\nexport class PrettyJSON {\n    static readonly cssClass = 'js-bcd-prettyJSON';\n    static readonly asString = 'bcd_prettyJSON';\n    element_:HTMLElement;\n    constructor(element:HTMLElement) {\n        registerUpgrade(element, this, null, false, true);\n        this.element_ = element;\n\n        const json = JSON.parse(element.textContent ?? '');\n        this.element_.textContent = JSON.stringify(json, null, 2);\n\n        this.element_.classList.add('initialized');\n    }\n}\ncomponentsToRegister.push(PrettyJSON);\n/*\n\n\n/***\n *    $$\\      $$\\                 $$\\           $$\\       $$$$$$$\\  $$\\           $$\\\n *    $$$\\    $$$ |                $$ |          $$ |      $$  __$$\\ \\__|          $$ |\n *    $$$$\\  $$$$ | $$$$$$\\   $$$$$$$ | $$$$$$\\  $$ |      $$ |  $$ |$$\\  $$$$$$\\  $$ | $$$$$$\\   $$$$$$\\\n *    $$\\$$\\$$ $$ |$$  __$$\\ $$  __$$ | \\____$$\\ $$ |      $$ |  $$ |$$ | \\____$$\\ $$ |$$  __$$\\ $$  __$$\\\n *    $$ \\$$$  $$ |$$ /  $$ |$$ /  $$ | $$$$$$$ |$$ |      $$ |  $$ |$$ | $$$$$$$ |$$ |$$ /  $$ |$$ /  $$ |\n *    $$ |\\$  /$$ |$$ |  $$ |$$ |  $$ |$$  __$$ |$$ |      $$ |  $$ |$$ |$$  __$$ |$$ |$$ |  $$ |$$ |  $$ |\n *    $$ | \\_/ $$ |\\$$$$$$  |\\$$$$$$$ |\\$$$$$$$ |$$ |      $$$$$$$  |$$ |\\$$$$$$$ |$$ |\\$$$$$$  |\\$$$$$$$ |\n *    \\__|     \\__| \\______/  \\_______| \\_______|\\__|      \\_______/ \\__| \\_______|\\__| \\______/  \\____$$ |\n *                                                                                               $$\\   $$ |\n *                                                                                               \\$$$$$$  |\n *                                                                                                \\______/\n */\n\n\nexport class BCDModalDialog extends EventTarget {\n    static readonly cssClass = 'js-bcd-modal';\n    static readonly asString = 'BellCubic Modal';\n\n    static obfuscator: HTMLDivElement;\n    static modalsToShow: BCDModalDialog[] = [];\n    static shownModal: BCDModalDialog|null = null;\n\n    element_:HTMLDialogElement|HTMLElement;\n    closeByClickOutside:boolean;\n\n    constructor(element:HTMLDialogElement) {\n        super();\n        registerUpgrade(element, this, null, false, true);\n\n        this.element_ = element;\n\n        this.element_.ariaModal = 'true';\n        this.element_.setAttribute('role', 'dialog');\n        this.element_.ariaHidden = 'true';\n        this.element_.hidden = true;\n\n        const body = document.body ?? document.documentElement.getElementsByTagName('body')[0];\n\n        // Move element to the top of the body (just one more thing to make sure it shows above everything else)\n        body.prepend(element);\n\n        if (!BCDModalDialog.obfuscator) {\n            BCDModalDialog.obfuscator = document.createElement('div');\n            BCDModalDialog.obfuscator.classList.add(mdl.MaterialLayout.cssClasses.OBFUSCATOR, 'js-bcd-modal-obfuscator');\n            body.appendChild(BCDModalDialog.obfuscator);\n        }\n\n        this.closeByClickOutside = !this.element_.hasAttribute('no-click-outside');\n\n        afterDelay(1000, function (this: BCDModalDialog) { // Lets the DOM settle and gives JavaScript a chance to modify the element\n\n            const closeButtons = this.element_.getElementsByClassName('js-bcd-modal-close') as HTMLCollectionOf<HTMLElement>;\n            for (const button of closeButtons) {\n                registerForEvents(button, {activate: this.boundHideFunction});\n            }\n\n            if (this.element_.hasAttribute('open-by-default')) this.show();\n        }.bind(this));\n    }\n\n    static evalQueue(delay: number = 100):void {\n\n        //console.debug(\"========================\\nEvaluating modal queue...\\n========================\");\n\n        //const willExit = {\n        //    shownModal: this.shownModal,\n        //    modalsToShow: this.modalsToShow,\n        //\n        //    shownModal_bool: !!this.modalsToShow.length,\n        //    modalsToShow_lengthBool: !this.modalsToShow.length\n        //};\n        //console.debug('Will exit?', !!(this.shownModal || !this.modalsToShow.length), willExit);\n\n        if (this.shownModal || !this.modalsToShow.length) return;\n\n        const modal = BCDModalDialog.modalsToShow.shift(); if (!modal) return this.evalQueue();\n        BCDModalDialog.shownModal = modal;\n\n        //console.debug(\"Showing modal:\", modal);\n\n        afterDelay(delay, modal.show_forReal.bind(modal));\n    }\n\n    show(){\n        BCDModalDialog.modalsToShow.push(this);\n        //console.debug(\"[BCD-MODAL] Modals to show (after assignment):\", bcdModalDialog.modalsToShow);\n        BCDModalDialog.evalQueue();\n        //console.debug(\"[BCD-MODAL] Modals to show (after eval):\", bcdModalDialog.modalsToShow);\n\n        return new Promise<string|null>((resolve) => {\n            this.addEventListener('afterHide', (evt) => {\n                if ('detail' in evt && typeof evt.detail === 'string')\n                    resolve(evt.detail);\n                else\n                    resolve(null);\n            }, {once: true});\n        });\n    }\n\n    /** Event sent just before the modal is shown\n        If this event is canceled or `PreventDefault()` is called, the modal will not be shown.\n\n        The event is first sent for the class and, if not canceled and if `PreventDefault()` was not called, the event is sent for the element.\n    */\n    static readonly beforeShowEvent = new CustomEvent('beforeShow', {cancelable: true, bubbles: false, composed: false});\n\n    /** Event sent just after the modal is shown\n\n        The event is first sent for the class and, if not canceled and if PreventDefault() was not called, the event is sent for the element.\n    */\n    static readonly afterShowEvent = new CustomEvent('afterShow', {cancelable: false, bubbles: false, composed: false});\n\n    private show_forReal() {\n        //console.debug(\"[BCD-MODAL] Showing modal:\", this);\n        /* 'Before' Event */ if (!this.dispatchEvent(BCDModalDialog.beforeShowEvent) || !this.element_.dispatchEvent(BCDModalDialog.beforeShowEvent)) return;\n\n        BCDModalDialog.obfuscator.classList.add(mdl.MaterialLayout.cssClasses.IS_DRAWER_OPEN);\n        registerForEvents(BCDModalDialog.obfuscator, {activate: this.boundHideFunction});\n\n        this.element_.ariaHidden = 'false';\n        this.element_.hidden = false;\n\n        if ('show' in this.element_) this.element_.show();\n        else this.element_.setAttribute('open', '');\n        //console.debug(\"[BCD-MODAL] Modal shown:\", this);\n\n        /* 'After' Event */  if (this.dispatchEvent(BCDModalDialog.afterShowEvent)) this.element_.dispatchEvent(BCDModalDialog.afterShowEvent);\n\n        //console.debug(\"[BCD-MODAL] Modals to show (after show):\", bcdModalDialog.modalsToShow);\n    }\n\n    /** Event sent just before the modal is hidden\n        If this event is canceled or `PreventDefault()` is called, the modal will not be shown.\n\n        The event is first sent for the class and, if not canceled and if `PreventDefault()` was not called, the event is sent for the element.\n    */\n    static getBeforeHideEvent(msg: string|null = null) {return new CustomEvent('beforeHide', {cancelable: true, bubbles: false, composed: false, detail: msg});}\n\n    /** Event sent just after the modal is hidden\n\n        The event is first sent for the class and, if not canceled and if PreventDefault() was not called, the event is sent for the element.\n    */\n    static getAfterHideEvent(msg: string|null = null) {return new CustomEvent('afterHide', {cancelable: false, bubbles: false, composed: false, detail: msg});}\n\n    // Storing the bound function lets us remove the event listener from the obfuscator after the modal is hidden\n    boundHideFunction = this.hide.bind(this);\n\n    hide(evt?: Event){\n        //console.debug(\"[BCD-MODAL] Hiding modal:\", this);\n\n        let msg = null;\n        if (evt && evt.currentTarget instanceof Element)\n            msg = evt.currentTarget.getAttribute('data-modal-message');\n\n        if (evt) evt.stopImmediatePropagation();\n        /* 'Before' Event */ if (!this.dispatchEvent(BCDModalDialog.getBeforeHideEvent(msg)) ||!this.element_.dispatchEvent(BCDModalDialog.getBeforeHideEvent(msg))) return;\n\n        this.element_.ariaHidden = 'true';\n\n        if ('close' in this.element_) this.element_.close();\n        else this.element_.removeAttribute('open');\n\n        this.element_.hidden = true;\n\n        BCDModalDialog.obfuscator.classList.remove(mdl.MaterialLayout.cssClasses.IS_DRAWER_OPEN);\n        BCDModalDialog.obfuscator.removeEventListener(window.clickEvt, this.boundHideFunction);\n\n        BCDModalDialog.shownModal = null;\n\n\n        /* 'After' Event */  if (this.dispatchEvent(BCDModalDialog.getAfterHideEvent(msg))) this.element_.dispatchEvent(BCDModalDialog.getAfterHideEvent(msg));\n\n        BCDModalDialog.evalQueue();\n    }\n\n}\ncomponentsToRegister.push(BCDModalDialog);\n\n\n/***\n *    $$$$$$$\\                                      $$\\\n *    $$  __$$\\                                     $$ |\n *    $$ |  $$ | $$$$$$\\   $$$$$$\\   $$$$$$\\   $$$$$$$ | $$$$$$\\  $$\\  $$\\  $$\\ $$$$$$$\\\n *    $$ |  $$ |$$  __$$\\ $$  __$$\\ $$  __$$\\ $$  __$$ |$$  __$$\\ $$ | $$ | $$ |$$  __$$\\\n *    $$ |  $$ |$$ |  \\__|$$ /  $$ |$$ /  $$ |$$ /  $$ |$$ /  $$ |$$ | $$ | $$ |$$ |  $$ |\n *    $$ |  $$ |$$ |      $$ |  $$ |$$ |  $$ |$$ |  $$ |$$ |  $$ |$$ | $$ | $$ |$$ |  $$ |\n *    $$$$$$$  |$$ |      \\$$$$$$  |$$$$$$$  |\\$$$$$$$ |\\$$$$$$  |\\$$$$$\\$$$$  |$$ |  $$ |\n *    \\_______/ \\__|       \\______/ $$  ____/  \\_______| \\______/  \\_____\\____/ \\__|  \\__|\n *                                  $$ |\n *                                  $$ |\n *                                  \\__|\n */\n\n/** Classes that determine where the menu is aligned relative to the button */\nexport enum menuCorners {\n    unaligned = 'mdl-menu--unaligned',\n    topLeft = 'mdl-menu--bottom-left',\n    topRight = 'mdl-menu--bottom-right',\n    bottomLeft = 'mdl-menu--top-left',\n    bottomRight = 'mdl-menu--top-right'\n}\n\ninterface DropdownItem {\n    /** Callback sent when this particular option is selected */\n    onSelect: Function|null;\n    /** Tooltip text to display when hovering over this option */\n    tooltip?: string;\n}\ntype optionObj = Record<string, DropdownItem | Function|null>\n\nexport abstract class BCDDropdown extends mdl.MaterialMenu {\n\n    abstract options(): optionObj;\n\n    doReorder:boolean;\n\n    options_: optionObj;\n    options_keys: string[];\n\n    selectedOption: string = '';\n\n    override element_: HTMLElement;\n\n    selectionTextElements: undefined | HTMLCollectionOf<HTMLElement>;\n\n    constructor(element: Element, buttonElement?: Element|null, doReorder: boolean = true) {\n        super(element);\n\n        this.element_ = element as HTMLElement;\n\n        this.doReorder = doReorder;\n        if (doReorder) this.Constant_.CLOSE_TIMEOUT = 0;\n\n        if (this.forElement_) {\n            this.forElement_?.removeEventListener(window.clickEvt, this.boundForClick_);\n            this.forElement_?.removeEventListener('keydown', this.boundForKeydown_);\n        }\n\n        if (buttonElement && buttonElement !== this.forElement_) {\n            this.forElement_ = buttonElement as HTMLElement;\n        }\n\n        if (this.forElement_) {\n            this.forElement_.ariaHasPopup = 'true';\n\n            // MDL has custom handling for keyboard vs mouse events, so I'll register them raw\n            this.forElement_.addEventListener(window.clickEvt, this.boundForClick_);\n            this.forElement_.addEventListener('keydown', this.boundForKeydown_);\n        }\n\n        //console.log(\"[BCD-DROPDOWN] Initializing dropdown:\", this);\n\n        const tempOptions = this.options();\n        this.options_ = tempOptions;\n        this.options_keys = Object.keys(this.options_);\n\n        this.selectedOption = this.options_keys[0] ?? '';\n\n        for (const option of this.options_keys) {\n            this.element_.appendChild(this.createOption(option));\n        }\n\n        this.selectionTextElements = this.forElement_?.getElementsByClassName('bcd-dropdown_value') as HTMLCollectionOf<HTMLElement>;\n\n        this.hide();\n        this.updateOptions();\n\n        this.element_.addEventListener('focusout', this.focusOutHandler.bind(this));\n\n        registerUpgrade(element, this, this.forElement_, true, true);\n    }\n\n    focusOutHandler(evt: FocusEvent){\n        if ((evt.relatedTarget as Element|null)?.parentElement !== this.element_) this.hide();\n    }\n\n    selectByString(option: string){\n        if (this.options_keys.includes(option)) this.selectedOption = option;\n        else console.warn(\"[BCD-DROPDOWN] Attempted to select an option that does not exist:\", option);\n        this.updateOptions();\n    }\n\n    updateOptions() {\n        const children: HTMLLIElement[] = [...this.element_.getElementsByTagName('li') ];\n        //console.log(\"[BCD-DROPDOWN] Updating options:\", this, children, children.map((elm) => elm.textContent), this.selectedOption);\n\n        if (this.doReorder) {\n            const goldenChild = children.find((elm) => (elm as HTMLLIElement).textContent === this.selectedOption);\n            if (!goldenChild) {\n                console.log(\"[BCD-DROPDOWN] Erroring instance:\", this);\n\n                throw new Error('Could not find the selected option in the dropdown.');\n            }\n\n            this.makeSelected(goldenChild);\n        }\n\n        const demonChildren = this.doReorder ? children.filter((elm) => (elm as HTMLLIElement).textContent !== this.selectedOption) : children;\n        demonChildren.sort( (a, b) => this.options_keys.indexOf(a.textContent ?? '') - this.options_keys.indexOf(b.textContent ?? '') );\n\n        for (const child of demonChildren) {\n            this.element_.removeChild(child);\n            this.makeNotSelected(child);\n            this.element_.appendChild(child);\n        }\n    }\n\n    createOption(option: string, onSelectCallback?: Function|null, tooltip?: string, addToList: boolean = false): HTMLLIElement {\n        const li = document.createElement('li');\n        li.textContent = option;\n        li.setAttribute('option-value', option);\n        li.classList.add('mdl-menu__item');\n\n        this.registerItem(li);\n\n        const optionData = this.options_[option];\n        if (optionData) {\n\n            if (tooltip === undefined && 'tooltip' in optionData)\n                    tooltip = optionData.tooltip;\n\n            if (!onSelectCallback)\n                if ('onSelect' in optionData) onSelectCallback = optionData.onSelect;\n                else onSelectCallback = optionData;\n        }\n\n        if (addToList) {\n            this.element_.appendChild(li);\n            this.options_keys.push(option);\n            this.options_[option] = {\n                onSelect: onSelectCallback ?? null,\n                tooltip,\n            };\n        }\n\n        if (onSelectCallback) registerForEvents(li, {activate: onSelectCallback.bind(this)});\n\n        this.onCreateOption?.(option);\n        return li;\n    }\n\n    createTooltip(targetElement: HTMLLIElement, tooltip: string) {\n\n    }\n\n    override onItemSelected(option: HTMLLIElement) {\n        this.selectedOption = option.textContent ?? '';\n        this.element_.dispatchEvent(new CustomEvent('bcd-dropdown-change', { detail: {dropdown: this, option: this.selectedOption} }));\n        this.updateOptions();\n    }\n\n    onCreateOption?(option: string): void\n\n    makeSelected(option: HTMLLIElement) {\n        if (this.doReorder) option.classList.add('mdl-menu__item--full-bleed-divider');\n        option.blur();\n\n        for (const elm of this.selectionTextElements ?? []) {\n            elm.textContent = option.textContent;\n        }\n    }\n\n    makeNotSelected(option: HTMLLIElement) {\n        option.classList.remove('mdl-menu__item--full-bleed-divider');\n    }\n\n    private _optionElements: undefined | HTMLCollectionOf<HTMLLIElement>;\n    get optionElements(): HTMLCollectionOf<HTMLLIElement> { return this._optionElements ??= this.element_.getElementsByTagName('li') as HTMLCollectionOf<HTMLLIElement>; }\n\n    hasShownOrHiddenThisFrame: boolean = false;\n\n    override show(evt: any){\n        if (this.hasShownOrHiddenThisFrame) return;\n        this.hasShownOrHiddenThisFrame = true;\n        requestAnimationFrame(() => this.hasShownOrHiddenThisFrame = false);\n\n        if (this.element_.ariaHidden === 'false') return;\n\n        //console.log(\"[BCD-DROPDOWN] Showing dropdown:\", this, evt);\n\n        if (evt instanceof KeyboardEvent || evt instanceof PointerEvent && evt.pointerId === -1 || 'mozInputSource' in evt && evt.mozInputSource !== 1)\n            this.optionElements[0]?.focus();\n\n        this.element_.ariaHidden = 'false';\n        this.element_.removeAttribute('disabled');\n        if (this.forElement_) this.forElement_.ariaExpanded = 'true';\n\n        for (const item of this.optionElements) item.tabIndex = 0;\n\n        this.forElement_?.targetingComponents?.get(BCDTooltip)?.hide();\n\n        super.show(evt);\n    }\n\n    override hide(){\n        if (this.hasShownOrHiddenThisFrame) return;\n        this.hasShownOrHiddenThisFrame = true;\n        requestAnimationFrame(() => this.hasShownOrHiddenThisFrame = false);\n\n        if (this.element_.ariaHidden === 'true') return;\n\n        //console.log(\"[BCD-DROPDOWN] Hiding dropdown:\", this);\n\n        this.optionElements[0]?.blur();\n\n        this.element_.ariaHidden = 'true';\n        this.element_.setAttribute('disabled', '');\n        if (this.forElement_) this.forElement_.ariaExpanded = 'false';\n\n        for (const item of this.optionElements) item.tabIndex = -1;\n\n        super.hide();\n    }\n}\n\nexport class bcdDropdown_AwesomeButton extends BCDDropdown {\n    static readonly asString = 'BCD - Debugger\\'s All-Powerful Button';\n    static readonly cssClass = 'js-bcd-debuggers-all-powerful-button';\n\n    constructor(element: Element) {\n        super(element, undefined, false);\n    }\n\n    override options(): Record<string, Function|null> {\n        return {\n            'View Debug Page': () => {document.getElementById('debug-link')?.click();},\n            'Toggle Page Monochrome': () => {\n                let [, start, percentage, end] = document.body.style.filter.match(/(.*)grayscale\\((.*?)\\)(.*)/) ?? [];\n                start ??= ''; percentage ??= ''; end ??= '';\n                document.body.style.filter = `${start}grayscale(${percentage === '100%' ? '0%' : '100%'})${end}`;\n            },\n        };\n    }\n}\ncomponentsToRegister.push(bcdDropdown_AwesomeButton);\n\n\n\n/***\n *    $$$$$$$$\\           $$\\       $$\\                       $$\\\n *    \\__$$  __|          $$ |      $$ |                      $$ |\n *       $$ |    $$$$$$\\  $$$$$$$\\  $$$$$$$\\   $$$$$$\\   $$$$$$$ |\n *       $$ |    \\____$$\\ $$  __$$\\ $$  __$$\\ $$  __$$\\ $$  __$$ |\n *       $$ |    $$$$$$$ |$$ |  $$ |$$ |  $$ |$$$$$$$$ |$$ /  $$ |\n *       $$ |   $$  __$$ |$$ |  $$ |$$ |  $$ |$$   ____|$$ |  $$ |\n *       $$ |   \\$$$$$$$ |$$$$$$$  |$$$$$$$  |\\$$$$$$$\\ \\$$$$$$$ |\n *       \\__|    \\_______|\\_______/ \\_______/  \\_______| \\_______|\n *\n *\n *\n *    $$\\                                                 $$\\\n *    $$ |                                                $$ |\n *    $$ |       $$$$$$\\  $$\\   $$\\  $$$$$$\\  $$\\   $$\\ $$$$$$\\\n *    $$ |       \\____$$\\ $$ |  $$ |$$  __$$\\ $$ |  $$ |\\_$$  _|\n *    $$ |       $$$$$$$ |$$ |  $$ |$$ /  $$ |$$ |  $$ |  $$ |\n *    $$ |      $$  __$$ |$$ |  $$ |$$ |  $$ |$$ |  $$ |  $$ |$$\\\n *    $$$$$$$$\\ \\$$$$$$$ |\\$$$$$$$ |\\$$$$$$  |\\$$$$$$  |  \\$$$$  |\n *    \\________| \\_______| \\____$$ | \\______/  \\______/    \\____/\n *                        $$\\   $$ |\n *                        \\$$$$$$  |\n *                         \\______/\n */\n\nexport class BCDTabButton extends mdl.MaterialButton {\n    static readonly asString = 'BCD - Tab List Button';\n    static readonly cssClass = 'js-tab-list-button';\n\n    static anchorToSet = '';\n\n    override element_: HTMLButtonElement;\n    boundTab:HTMLDivElement;\n    name:string = '';\n    setAnchor: boolean = false;\n\n    constructor(element: HTMLButtonElement) {\n        if (element.tagName !== 'BUTTON') throw new TypeError('A BellCubic Tab Button must be created directly from a <button> element.');\n\n        const name = element.getAttribute('name');\n        if (!name) throw new TypeError('A BellCubic Tab Button must have a name attribute.');\n\n        const boundTab = document.querySelector(`div.tab-content[name=\"${name}\"]`) as HTMLDivElement;\n        if (!boundTab) throw new TypeError(`Could not find a tab with the name \"${name}\".`);\n        if (!boundTab.parentElement) throw new TypeError(`Tab with name \"${name}\" has no parent element!`);\n\n        element.textContent = name;\n        element.setAttribute('type', 'button');\n\n        super(element); // Now we can use `this`!\n        registerUpgrade(element, this, boundTab, false, true);\n        this.element_ = element;\n\n        this.boundTab = boundTab;\n        this.name = name;\n\n        // Check if the page was reloaded\n        const entry = window.performance.getEntriesByType(\"navigation\")?.[0];\n        this.setAnchor = element.parentElement?.hasAttribute('do-tab-anchor') ?? false;\n\n        registerForEvents(this.element_, {activate: this.activate.bind(this)});\n\n        if (entry && 'type' in entry && entry.type === 'reload')\n            this.makeSelected(0);\n        else if (this.setAnchor && window.location.hash.toLowerCase() === `#tab-${name}`.toLowerCase())\n            queueMicrotask(this.makeSelected.bind(this));\n        else\n            this.makeSelected(0);\n    }\n\n    /** @returns the index of this tab (0-based) or -1 if not found */\n    findTabNumber(button_?: Element): number {\n        const button = button_ ?? this.element_;\n        //console.debug('findTabNumber: - button:', button, 'array:', [...(button.parentElement?.children ?? [])], 'index:', [...(button.parentElement?.children ?? [])].indexOf(button));\n        return [...(button.parentElement?.children ?? [])].indexOf(button);\n    }\n\n    makeSelected(tabNumber_?: number) {\n        const tabNumber = tabNumber_ ?? this.findTabNumber();\n        if (tabNumber === -1) throw new Error('Could not find the tab number.');\n        //console.debug('makeSelected: tabNumber:', tabNumber);\n\n        const siblingsAndSelf = [...(this.element_.parentElement?.children ?? [])];\n        if (!siblingsAndSelf[tabNumber] || siblingsAndSelf[tabNumber]!.classList.contains('active')) return;\n\n        for (const sibling of siblingsAndSelf) {\n            if (sibling === this.element_) {\n                sibling.classList.add('active');\n                sibling.setAttribute('aria-pressed', 'true');\n                sibling.setAttribute('aria-selected', 'true');\n            }\n            else {\n                sibling.classList.remove('active');\n                sibling.setAttribute('aria-pressed', 'false');\n                sibling.setAttribute('aria-selected', 'false');\n            }\n        }\n\n        if (!this.boundTab.parentElement) return; // I would worry about race conditions, but browsers run websites in an Event Loop.\n\n        const tab_siblingsAndTab = [...this.boundTab.parentElement.children];\n        for (const tab of tab_siblingsAndTab) {\n\n            if (tab === this.boundTab) {\n                tab.classList.add('active');\n                tab.classList.remove('tab-content--hidden');\n                if ('inert' in (tab as HTMLElement)) (tab as HTMLElement).inert = false;\n\n                tab.setAttribute('aria-hidden', 'false');\n\n                tab.removeAttribute('disabled');\n                tab.removeAttribute('tabindex');\n\n                this.boundTab.parentElement.style.marginLeft = `-${tabNumber}00vw`;\n\n            } else {\n\n                tab.classList.remove('active');\n\n                function addHidden() {\n                    if (tab.classList.contains('active')) return;\n                    tab.classList.add('tab-content--hidden');\n                    if ('inert' in (tab as HTMLElement)) (tab as HTMLElement).inert = true;\n                }\n                tab.parentElement!.addEventListener('transitionend', addHidden, {once: true});\n                afterDelay(250, () => {\n                    tab.parentElement?.removeEventListener('transitionend', addHidden);\n                    addHidden();\n                });\n\n                tab.setAttribute('aria-hidden', 'true');\n\n                tab.setAttribute('disabled', '');\n                tab.setAttribute('tabindex', '-1');\n            }\n\n        }\n\n        if (this.setAnchor) {\n            // Update the URL hash - if the tab is not the first tab, then add the tab name to the hash. Otherwise, remove the hash.\n            BCDTabButton.anchorToSet = tabNumber == 0 ? '' : `#tab-${this.name}`.toLowerCase();\n            BCDTabButton.setAnchorIn3AnimFrames();\n        }\n    }\n\n    /** Sets `window.location.hash` to the value of `bcdTabButton.anchorToSet` in three animation frames. */\n    static setAnchorIn3AnimFrames() {\n        nestAnimationFrames(3,  () => {\n                    if (BCDTabButton.anchorToSet === '') window.history.replaceState(null, '', window.location.pathname);\n                    else window.location.hash = BCDTabButton.anchorToSet;\n        });\n    }\n\n    activate(): void {\n        this.makeSelected();\n        this.element_.blur();\n    }\n}\ncomponentsToRegister.push(BCDTabButton);\n\n\n\n\n/***\n *    $$$$$$$$\\                     $$\\   $$\\     $$\\\n *    \\__$$  __|                    $$ |  $$ |    \\__|\n *       $$ |    $$$$$$\\   $$$$$$\\  $$ |$$$$$$\\   $$\\  $$$$$$\\   $$$$$$$\\\n *       $$ |   $$  __$$\\ $$  __$$\\ $$ |\\_$$  _|  $$ |$$  __$$\\ $$  _____|\n *       $$ |   $$ /  $$ |$$ /  $$ |$$ |  $$ |    $$ |$$ /  $$ |\\$$$$$$\\\n *       $$ |   $$ |  $$ |$$ |  $$ |$$ |  $$ |$$\\ $$ |$$ |  $$ | \\____$$\\\n *       $$ |   \\$$$$$$  |\\$$$$$$  |$$ |  \\$$$$  |$$ |$$$$$$$  |$$$$$$$  |\n *       \\__|    \\______/  \\______/ \\__|   \\____/ \\__|$$  ____/ \\_______/\n *                                                    $$ |\n *                                                    $$ |\n *                                                    \\__|\n */\n\n\nexport class BCDTooltip {\n    static readonly asString = 'BCD - Tooltip';\n    static readonly cssClass = 'js-bcd-tooltip';\n\n    relation: 'preceding' | 'proceeding' | 'child' | 'selector';\n    position: 'top' | 'bottom' | 'left' | 'right' = 'top';\n\n    element: HTMLElement;\n    boundElement: HTMLElement;\n    gapBridgeElement: HTMLElement;\n\n    openDelayMS: number;\n\n    constructor(element: HTMLElement) {\n        this.element = element;\n        element.setAttribute('role', 'tooltip'); element.setAttribute('aria-role', 'tooltip');\n\n        this.gapBridgeElement = document.createElement('div');\n        this.gapBridgeElement.classList.add('js-bcd-tooltip_gap-bridge');\n        this.element.appendChild(this.gapBridgeElement);\n\n        this.openDelayMS =  parseInt(element.getAttribute('open-delay-ms') ?? '400');\n\n\n        const tempRelation = element.getAttribute('tooltip-relation') ?? 'proceeding';\n\n        let tempElement;\n\n        switch (tempRelation) {\n            case 'preceding': tempElement = element.nextElementSibling; break;\n            case 'proceeding': tempElement = element.previousElementSibling; break;\n            case 'child': tempElement = element.parentElement; break;\n\n            case 'selector': {\n                const selector = element.getAttribute('tooltip-selector') ?? '';\n                tempElement = element.parentElement?.querySelector(selector)\n                                         ?? document.querySelector(selector);\n            break; }\n\n            default: throw new Error('Invalid tooltip-relation attribute!');\n        }\n\n        this.relation = tempRelation;\n\n        if (!tempElement || !(tempElement instanceof HTMLElement) ) throw new Error('TOOLTIP - Could not find a valid HTML Element to bind to!');\n        this.boundElement = tempElement;\n        registerUpgrade(element, this, this.boundElement, true, true);\n\n        const tempPos = element.getAttribute('tooltip-position');\n\n        switch (tempPos) {\n            case 'top':  case 'bottom':  case 'left':  case 'right':\n                this.position = tempPos; break;\n\n            default: throw new Error('Invalid tooltip-position attribute!');\n        }\n\n        const boundEnter = this.handleHoverEnter.bind(this);\n        const boundLeave = this.handleHoverLeave.bind(this);\n        const boundTouch = this.handleTouch.bind(this);\n\n        window.addEventListener('contextmenu', boundLeave);\n        this.element.addEventListener('contextmenu', (e) => e.stopPropagation());\n\n        this.boundElement.addEventListener('mouseenter',  boundEnter);                  this.element.addEventListener('mouseenter',  boundEnter);\n        this.boundElement.addEventListener('mouseleave',  boundLeave);                  this.element.addEventListener('mouseleave',  boundLeave);\n\n        this.boundElement.addEventListener('touchstart',  boundTouch, {passive: true}); this.element.addEventListener('touchstart',  boundTouch, {passive: true});\n        this.boundElement.addEventListener('touchmove',   boundTouch, {passive: true}); this.element.addEventListener('touchmove',   boundTouch, {passive: true});\n        this.boundElement.addEventListener('touchend',    boundTouch, {passive: true}); this.element.addEventListener('touchend',    boundTouch, {passive: true});\n        this.boundElement.addEventListener('touchcancel', boundTouch, {passive: true}); this.element.addEventListener('touchcancel', boundTouch, {passive: true});\n    }\n\n    handleTouch(event: TouchEvent) {\n        if (event.targetTouches.length > 0) this.handleHoverEnter(undefined, true);\n        else this.handleHoverLeave();\n    }\n\n    handleHoverEnter(event?: MouseEvent|FocusEvent, bypassWait?: true) {\n        const targetElement = event instanceof MouseEvent ? document.elementFromPoint(event?.x ?? 0, event?.y ?? 0) : event?.target;\n\n        if (targetElement instanceof Element) {\n            for (const [,instance] of targetElement.upgrades ?? [])\n                if (instance instanceof BCDDropdown) return;\n\n            for (const [,instance] of targetElement.targetingComponents ?? [])\n                if (instance instanceof BCDDropdown && instance.container_.classList.contains('is-visible')) return;\n        }\n\n        this.showPart1();\n\n        afterDelay(bypassWait ? 0 : 600, function(this: BCDTooltip) {\n            if (!this.element.classList.contains('active_')) return;\n            this.showPart2();\n        }.bind(this));\n\n    }\n\n    showPart1() {\n        this.element.classList.add('active_');\n        registerForEvents(window, {exit: this.hide_bound});\n    }\n\n    showPart2() {\n        this.element.classList.add('active');\n        this.element.addEventListener('transitionend', this.setPosition.bind(this), {once: true});\n        this.setPosition();\n    }\n\n    show() {\n        this.showPart1();\n        this.showPart2();\n    }\n\n    handleHoverLeave(event?: MouseEvent|FocusEvent) { this.hide(); }\n\n    hide() {\n        this.element.classList.remove('active_');\n\n        afterDelay(10, () => {\n            if (!this.element.classList.contains('active_'))\n                this.element.classList.remove('active');\n        });\n    }\n    readonly hide_bound = this.hide.bind(this);\n\n    setPosition() {\n        //console.log(`Setting position of tooltip to the ${this.position} of `, this.boundElement);\n\n        this.element.style.transform = 'none !important';\n        this.element.style.transition = 'none !important';\n\n        // Force recalc of styles\n        const tipStyle = window.getComputedStyle(this.element);\n        tipStyle.transition;\n        tipStyle.transform;\n\n        //console.debug('Recalculated styles:', {transform: tipStyle.transform, transition: tipStyle.transition, width: tipStyle.width, height: tipStyle.height, offsetLeft: this.element.offsetLeft, offsetTop: this.element.offsetTop, offsetWidth: this.element.offsetWidth, offsetHeight: this.element.offsetHeight});\n\n        const elemRect = this.boundElement.getBoundingClientRect();\n        const tipRect = {width: this.element.offsetWidth, height: this.element.offsetHeight};\n\n        //console.debug('Element rect:', elemRect);\n        //console.debug('Element rects:', this.boundElement.getClientRects());\n        //console.debug('Tooltip rect:', tipRect);\n        //console.debug('Tooltip rects:', this.element.getClientRects());\n\n        /** The top position - set to the middle of the Bound Element */\n        let top = elemRect.top  + (elemRect.height / 2);\n        /** The top margin - the negative height of the tooltip */\n        const marginTop = tipRect.height / -2;\n\n        /** The left position - set to the middle of the Bound Element */\n        let left =  elemRect.left + (elemRect.width  / 2);\n        /** The left margin - the negative width of the tooltip */\n        const marginLeft =   tipRect.width / -2;\n\n        //console.log(`Left Position: ${left + marginLeft}, pushing? ${left + marginLeft < 8}; Right Position: ${left + marginLeft + tipRect.width}, pushing? ${left + marginLeft + tipRect.width > window.innerWidth - 8}`);\n\n        // Padding of 16px on the left and right of the document\n\n        switch (this.position) {\n            case 'top':\n            case 'bottom':\n\n\n\n                this.gapBridgeElement.style.height = '17px';\n                this.gapBridgeElement.style.width = `${Math.max(tipRect.width, elemRect.width)}px`;\n                this.gapBridgeElement.style.left = `${Math.min(elemRect.left, left + marginLeft) - left - marginLeft}px`;\n\n                if (left + marginLeft < 8) left += 8 - left - marginLeft;\n\n                this.element.style.left = `${left}px`;\n                this.element.style.marginLeft = `${marginLeft}px`;\n\n            break;\n\n            case 'left':\n            case 'right':\n\n                top += 8 - top - marginTop;\n\n                this.gapBridgeElement.style.height = `${Math.max(tipRect.height, elemRect.height)}px`;\n                this.gapBridgeElement.style.width = '17px';\n                this.gapBridgeElement.style.top = `${Math.min(elemRect.top, top + marginTop) - top - marginTop}px`;\n\n                if (top + marginTop < 8) top += 8 - top - marginTop;\n\n                this.element.style.top = `${top}px`;\n                this.element.style.marginTop = `${marginTop}px`;\n\n            break;\n        }\n\n        //console.log(`Final Left Position: ${left + marginLeft - (tipRect.width / 2)}`);\n\n        switch (this.position) {\n\n            case 'top':     this.element.style.top  = `${elemRect.top  - tipRect.height - 16}px`;\n                            this.gapBridgeElement.style.top  = `${16  + tipRect.height}px`;\n            break;\n\n            case 'bottom': this.element.style.top  = `${elemRect.top  + elemRect.height + 16}px`;\n                            this.gapBridgeElement.style.top  = `-16px`;\n\n            break;\n\n            case 'left':   this.element.style.left = `${elemRect.left - tipRect.width - 16}px`;\n                            this.gapBridgeElement.style.left = `${16 + tipRect.width}px`;\n\n            break;\n\n            case 'right':  this.element.style.left = `${elemRect.left + elemRect.width + 16}px`;\n                            this.gapBridgeElement.style.left = `-16px`;\n\n        }\n\n        this.element.style.transform = '';\n        this.element.style.transition = '';\n    }\n\n}\ncomponentsToRegister.push(BCDTooltip);\n\n\n\n/***\n *    $$$$$$$\\                                              $$\\\n *    $$  __$$\\                                             \\__|\n *    $$ |  $$ |$$\\   $$\\ $$$$$$$\\   $$$$$$\\  $$$$$$\\$$$$\\  $$\\  $$$$$$$\\\n *    $$ |  $$ |$$ |  $$ |$$  __$$\\  \\____$$\\ $$  _$$  _$$\\ $$ |$$  _____|\n *    $$ |  $$ |$$ |  $$ |$$ |  $$ | $$$$$$$ |$$ / $$ / $$ |$$ |$$ /\n *    $$ |  $$ |$$ |  $$ |$$ |  $$ |$$  __$$ |$$ | $$ | $$ |$$ |$$ |\n *    $$$$$$$  |\\$$$$$$$ |$$ |  $$ |\\$$$$$$$ |$$ | $$ | $$ |$$ |\\$$$$$$$\\\n *    \\_______/  \\____$$ |\\__|  \\__| \\_______|\\__| \\__| \\__|\\__| \\_______|\n *              $$\\   $$ |\n *              \\$$$$$$  |\n *               \\______/\n *    $$$$$$$$\\                       $$\\            $$$$$$\\\n *    \\__$$  __|                      $$ |          $$  __$$\\\n *       $$ |    $$$$$$\\  $$\\   $$\\ $$$$$$\\         $$ /  $$ | $$$$$$\\   $$$$$$\\   $$$$$$\\   $$$$$$$\\\n *       $$ |   $$  __$$\\ \\$$\\ $$  |\\_$$  _|        $$$$$$$$ |$$  __$$\\ $$  __$$\\  \\____$$\\ $$  _____|\n *       $$ |   $$$$$$$$ | \\$$$$  /   $$ |          $$  __$$ |$$ |  \\__|$$$$$$$$ | $$$$$$$ |\\$$$$$$\\\n *       $$ |   $$   ____| $$  $$<    $$ |$$\\       $$ |  $$ |$$ |      $$   ____|$$  __$$ | \\____$$\\\n *       $$ |   \\$$$$$$$\\ $$  /\\$$\\   \\$$$$  |      $$ |  $$ |$$ |      \\$$$$$$$\\ \\$$$$$$$ |$$$$$$$  |\n *       \\__|    \\_______|\\__/  \\__|   \\____/       \\__|  \\__|\\__|       \\_______| \\_______|\\_______/\n *\n *\n *\n */\n\n\n\nexport abstract class bcdDynamicTextArea_base {\n    element: HTMLElement;\n\n    constructor(element: HTMLElement) {\n        registerUpgrade(element, this, null, false, true);\n        this.element = element;\n\n        this.adjust();\n\n        const boundAdjust = this.adjust.bind(this);\n        registerForEvents(this.element, {change: boundAdjust});\n\n        const resizeObserver = new ResizeObserver(boundAdjust);\n        resizeObserver.observe(this.element);\n\n        // Hopefully resolve an edge-case causing the text area to not initially size itself properly\n        requestAnimationFrame(boundAdjust);\n    }\n\n    abstract adjust(): any;\n\n}\n\nexport class bcdDynamicTextAreaHeight extends bcdDynamicTextArea_base {\n    static readonly asString = 'BCD - Dynamic TextArea - Height';\n    static readonly cssClass = 'js-dynamic-textarea-height';\n\n    constructor(element: HTMLElement) {\n        super(element);\n    }\n\n    override adjust() {\n        this.element.style.height = '';\n        getComputedStyle(this.element).height; // Force the browser to recalculate the scroll height\n\n        const paddingPX = parseInt(this.element.getAttribute('paddingPX') ?? '0');\n        if (isNaN(paddingPX)) {\n            console.warn('The paddingPX attribute of the dynamic text area is not a number:', this);\n        }\n\n        this.element.style.height = `${this.element.scrollHeight + paddingPX}px`;\n    }\n\n}\ncomponentsToRegister.push(bcdDynamicTextAreaHeight);\n\nexport class bcdDynamicTextAreaWidth extends bcdDynamicTextArea_base {\n    static readonly asString = 'BCD - Dynamic TextArea - Width';\n    static readonly cssClass = 'js-dynamic-textarea-width';\n\n    constructor(element: HTMLElement) {\n        super(element);\n        new ResizeObserver(this.adjust.bind(this)).observe(this.element);\n    }\n\n    override adjust() {\n        this.element.style.width = '';\n        getComputedStyle(this.element).width; // Force the browser to recalculate the scroll height\n\n        const paddingPX = parseInt(this.element.getAttribute('paddingPX') ?? '0');\n        if (isNaN(paddingPX)) {\n            console.warn('The paddingPX attribute of the dynamic text area is not a number:', this);\n        }\n\n        this.element.style.width = `min(${this.element.scrollWidth + paddingPX}px, 100cqmin)`;\n    }\n\n}\ncomponentsToRegister.push(bcdDynamicTextAreaWidth);\n\n\n\n/***\n *    $$$$$$$\\            $$\\             $$\\     $$\\\n *    $$  __$$\\           $$ |            $$ |    \\__|\n *    $$ |  $$ | $$$$$$\\  $$ | $$$$$$\\  $$$$$$\\   $$\\ $$\\    $$\\  $$$$$$\\\n *    $$$$$$$  |$$  __$$\\ $$ | \\____$$\\ \\_$$  _|  $$ |\\$$\\  $$  |$$  __$$\\\n *    $$  __$$< $$$$$$$$ |$$ | $$$$$$$ |  $$ |    $$ | \\$$\\$$  / $$$$$$$$ |\n *    $$ |  $$ |$$   ____|$$ |$$  __$$ |  $$ |$$\\ $$ |  \\$$$  /  $$   ____|\n *    $$ |  $$ |\\$$$$$$$\\ $$ |\\$$$$$$$ |  \\$$$$  |$$ |   \\$  /   \\$$$$$$$\\\n *    \\__|  \\__| \\_______|\\__| \\_______|   \\____/ \\__|    \\_/     \\_______|\n *\n *\n *\n *    $$$$$$$$\\ $$\\ $$\\                 $$$$$$$\\  $$\\           $$\\\n *    $$  _____|\\__|$$ |                $$  __$$\\ \\__|          $$ |\n *    $$ |      $$\\ $$ | $$$$$$\\        $$ |  $$ |$$\\  $$$$$$$\\ $$ |  $$\\  $$$$$$\\   $$$$$$\\\n *    $$$$$\\    $$ |$$ |$$  __$$\\       $$$$$$$  |$$ |$$  _____|$$ | $$  |$$  __$$\\ $$  __$$\\\n *    $$  __|   $$ |$$ |$$$$$$$$ |      $$  ____/ $$ |$$ /      $$$$$$  / $$$$$$$$ |$$ |  \\__|\n *    $$ |      $$ |$$ |$$   ____|      $$ |      $$ |$$ |      $$  _$$<  $$   ____|$$ |\n *    $$ |      $$ |$$ |\\$$$$$$$\\       $$ |      $$ |\\$$$$$$$\\ $$ | \\$$\\ \\$$$$$$$\\ $$ |\n *    \\__|      \\__|\\__| \\_______|      \\__|      \\__| \\_______|\\__|  \\__| \\_______|\\__|\n *\n *\n *\n */\n\nclass RelativeFilePicker {\n    static asString = 'BCD - Relative File Picker';\n    static cssClass = 'js-relative-file-picker';\n\n    element: HTMLInputElement;\n    button: HTMLButtonElement;\n\n    relativeTo?: fs.BellFolder|{directory: fs.BellFolder}|string[];\n    get directory(): fs.BellFolder|undefined {\n        if (!this.relativeTo) return undefined;\n        if ('handle' in this.relativeTo) return this.relativeTo;\n        if ('directory' in this.relativeTo) return this.relativeTo.directory;\n        return SettingsGrid.getSetting(this.relativeTo, 'directory');\n    }\n\n    constructor(element: HTMLInputElement, relativeTo?: fs.BellFolder|{directory: fs.BellFolder}) {\n        this.element = element;\n        this.relativeTo = relativeTo;\n\n        if (!relativeTo) {\n            const relativeToAttr = element.getAttribute('relative-to');\n            if (!relativeToAttr) throw new Error('The relative file picker must have a relative-to attribute or have a folder specified at creation.');\n\n            this.relativeTo = relativeToAttr.split('.');\n        }\n\n        registerUpgrade(element, this, null, false, true);\n\n        registerForEvents(this.element, {change: this.boundOnChange});\n\n\n        /* Create the following button:\n            <button class=\"mdl-button mdl-js-button mdl-button--fab mdl-js-ripple-effect js-relative-file-picker--button\"\n                <i class=\"material-icons\">edit_document</i>\n            </button>\n        */\n\n        this.button = document.createElement('button');\n        this.button.type = 'button';\n        this.button.classList.add(\n            /* MDL  */ 'mdl-button', 'mdl-js-button', 'mdl-button--fab', 'mdl-js-ripple-effect',\n            /* Mine */ 'js-relative-file-picker--button'\n        );\n\n        const icon = document.createElement('i');\n        icon.classList.add('material-icons');\n        icon.textContent = 'edit_document';\n\n        this.button.appendChild(icon);\n        this.element.after(this.button);\n\n        registerForEvents(this.button, {activate: this.boundOnButtonClick});\n    }\n\n    onChange() {\n        //console.log('onChange', this.element.value, this);\n    }\n    readonly boundOnChange = this.onChange.bind(this);\n\n    async onButtonClick() {\n        const fs = await import('./filesystem-interface.js');\n\n        const relativeTo = this.relativeTo instanceof fs.BellFolder ? this.relativeTo : this.directory;\n        if (!relativeTo) return console.warn('The relative file picker has no relative-to folder specified', this);\n\n        let fileHandle: fs.BellFile|undefined;\n        try {\n            [fileHandle] = await relativeTo.openFilePicker();\n        } catch (e) {\n            if (e && e instanceof DOMException && e.name === 'AbortError') return; // The user canceled the file picker (which is fine)\n            console.warn('The file picker threw some sort of error', e);\n            return;\n        }\n        if (!fileHandle) return console.warn('The file picker returned no file', this);\n\n        const nameArr = await this.directory?.resolveChildPath(fileHandle, true);\n        if (!nameArr) return console.debug('The file picker returned a file that is not in the specified directory', fileHandle, this.directory);\n\n        this.element.value = nameArr.join('/');\n        this.element.dispatchEvent(new Event('change'));\n    }\n    readonly boundOnButtonClick = this.onButtonClick.bind(this);\n}\ncomponentsToRegister.push(RelativeFilePicker);\n\n\n/***\n *    $$$$$$$\\            $$\\             $$\\     $$\\\n *    $$  __$$\\           $$ |            $$ |    \\__|\n *    $$ |  $$ | $$$$$$\\  $$ | $$$$$$\\  $$$$$$\\   $$\\ $$\\    $$\\  $$$$$$\\\n *    $$$$$$$  |$$  __$$\\ $$ | \\____$$\\ \\_$$  _|  $$ |\\$$\\  $$  |$$  __$$\\\n *    $$  __$$< $$$$$$$$ |$$ | $$$$$$$ |  $$ |    $$ | \\$$\\$$  / $$$$$$$$ |\n *    $$ |  $$ |$$   ____|$$ |$$  __$$ |  $$ |$$\\ $$ |  \\$$$  /  $$   ____|\n *    $$ |  $$ |\\$$$$$$$\\ $$ |\\$$$$$$$ |  \\$$$$  |$$ |   \\$  /   \\$$$$$$$\\\n *    \\__|  \\__| \\_______|\\__| \\_______|   \\____/ \\__|    \\_/     \\_______|\n *\n *\n *\n *    $$$$$$\\                                                   $$$$$$$\\  $$\\           $$\\\n *    \\_$$  _|                                                  $$  __$$\\ \\__|          $$ |\n *      $$ |  $$$$$$\\$$$$\\   $$$$$$\\   $$$$$$\\   $$$$$$\\        $$ |  $$ |$$\\  $$$$$$$\\ $$ |  $$\\  $$$$$$\\   $$$$$$\\\n *      $$ |  $$  _$$  _$$\\  \\____$$\\ $$  __$$\\ $$  __$$\\       $$$$$$$  |$$ |$$  _____|$$ | $$  |$$  __$$\\ $$  __$$\\\n *      $$ |  $$ / $$ / $$ | $$$$$$$ |$$ /  $$ |$$$$$$$$ |      $$  ____/ $$ |$$ /      $$$$$$  / $$$$$$$$ |$$ |  \\__|\n *      $$ |  $$ | $$ | $$ |$$  __$$ |$$ |  $$ |$$   ____|      $$ |      $$ |$$ |      $$  _$$<  $$   ____|$$ |\n *    $$$$$$\\ $$ | $$ | $$ |\\$$$$$$$ |\\$$$$$$$ |\\$$$$$$$\\       $$ |      $$ |\\$$$$$$$\\ $$ | \\$$\\ \\$$$$$$$\\ $$ |\n *    \\______|\\__| \\__| \\__| \\_______| \\____$$ | \\_______|      \\__|      \\__| \\_______|\\__|  \\__| \\_______|\\__|\n *                                    $$\\   $$ |\n *                                    \\$$$$$$  |\n *                                     \\______/\n */\n\n\nclass RelativeImagePicker extends RelativeFilePicker {\n    static override readonly asString = 'BCD - Relative Image Picker';\n    static override readonly cssClass = 'js-relative-image-picker';\n\n    imageElem?: HTMLImageElement;\n    noImageElem?: SVGSVGElement;\n    relation: 'previous'|'next'|'parent'|'selector';\n\n    static noImageDoc?: Document | Promise<string>;\n\n    constructor(element: HTMLInputElement, relativeTo?: fs.BellFolder|{directory: fs.BellFolder}) {\n        super(element, relativeTo);\n\n        this.relation = element.getAttribute('relation') as 'previous'|'next'|'parent'|'selector' ?? 'previous';\n\n        switch (this.relation) {\n\n            case 'previous':\n                this.imageElem = element.parentElement!.previousElementSibling as HTMLImageElement;\n                break;\n\n            case 'next':\n                this.imageElem = element.parentElement!.nextElementSibling as HTMLImageElement;\n                break;\n\n            case 'parent':\n                this.imageElem = element.parentElement as HTMLImageElement;\n                break;\n\n            case 'selector': {\n                const selector = element.getAttribute('selector');\n                if (!selector) throw new Error('The relative image picker must have a selector attribute if the relation is set to selector.');\n\n                this.imageElem = element.parentElement!.querySelector(selector) as HTMLImageElement\n                                            || document.querySelector(selector) as HTMLImageElement;\n                break;\n            }\n\n            default:\n                throw new Error('The relative image picker must have a relation attribute that is either previous, next, parent, or selector.');\n        }\n\n        this.createNoImageElem();\n\n        registerUpgrade(element, this, this.imageElem, true, true);\n    }\n\n    async createNoImageElem() {\n        // Create the request if it does not already exist\n        RelativeImagePicker.noImageDoc ??= fetch('https://fonts.gstatic.com/s/i/short-term/release/materialsymbolsrounded/image/default/48px.svg').then(r => r.text());\n\n        let svg: undefined|SVGSVGElement = undefined;\n        // Wait for the request to finish if it has not already\n        if (RelativeImagePicker.noImageDoc instanceof Promise) {\n            const str = await RelativeImagePicker.noImageDoc;\n            RelativeImagePicker.noImageDoc = new DOMParser().parseFromString(str, 'text/html');\n            svg = RelativeImagePicker.noImageDoc.querySelector('svg') as SVGSVGElement;\n\n            if (!svg.hasAttribute('viewBox')) svg.setAttribute('viewBox', `0 0 ${svg.getAttribute('width') || '0'} ${svg.getAttribute('height') || '0'}`);\n            svg.removeAttribute('width'); svg.removeAttribute('height');\n        }\n\n        svg ??= RelativeImagePicker.noImageDoc.querySelector('svg') as SVGSVGElement;\n        if (!svg) throw new Error('Could not find the SVG element in the SVG document.');\n\n        this.noImageElem = svg.cloneNode(true) as SVGSVGElement;\n        this.noImageElem.classList.add('js-relative-image-picker--no-image');\n\n        this.imageElem?.before(this.noImageElem);\n\n        this.imageElem?.src ? this.showImage() : this.hideImage();\n    }\n\n    hideImage() {\n        if (this.imageElem) {\n            this.imageElem.style.display = 'none';\n            this.imageElem.ariaDisabled = 'true';\n            this.imageElem.ariaHidden = 'true';\n        }\n        if (this.noImageElem) {\n            this.noImageElem.style.display = 'block';\n            this.noImageElem.ariaDisabled = 'false';\n            this.noImageElem.ariaHidden = 'false';\n        }\n    }\n\n    showImage() {\n        if (this.imageElem) {\n            this.imageElem.style.display = 'block';\n            this.imageElem.ariaDisabled = 'false';\n            this.imageElem.ariaHidden = 'false';\n        }\n        if (this.noImageElem) {\n            this.noImageElem.style.display = 'none';\n            this.noImageElem.ariaDisabled = 'true';\n            this.noImageElem.ariaHidden = 'true';\n        }\n    }\n\n    lastValue: string = '';\n    override async onChange() {\n        if (this.lastValue === this.element.value) return;\n        this.lastValue = this.element.value;\n\n        super.onChange();\n\n        const dir = this.directory;\n\n        if (!this.imageElem)\n            return console.info('The relative image picker does not have an image element to update.', this);\n\n        if (!dir) {\n            this.hideImage();\n            return console.info('The relative image picker does not have a directory to update the image from.', this, dir);\n        }\n\n        try {\n            const fileHandle_ = dir.getFile(this.element.value);\n            const [fileHandle, fs] = await Promise.all([fileHandle_, loadFS()]);\n\n            if (!fileHandle || fileHandle instanceof fs.InvalidNameError) {\n                this.hideImage();\n                return console.info('The relative image picker does not have a file handle to update the image with.', this);\n            }\n\n            this.imageElem.src = await (fileHandle.at(-1)! as fs.BellFile).readAsDataURL();\n            this.showImage();\n        } catch {\n            this.hideImage();\n        }\n    }\n}\ncomponentsToRegister.push(RelativeImagePicker);\n\n/***\n *    $$$$$$$\\   $$$$$$\\  $$\\      $$\\  $$$$$$\\\n *    $$  __$$\\ $$  __$$\\ $$$\\    $$$ |$$  __$$\\\n *    $$ |  $$ |$$ /  $$ |$$$$\\  $$$$ |$$ /  \\__|$$\\    $$\\  $$$$$$\\\n *    $$ |  $$ |$$ |  $$ |$$\\$$\\$$ $$ |\\$$$$$$\\  \\$$\\  $$  |$$  __$$\\\n *    $$ |  $$ |$$ |  $$ |$$ \\$$$  $$ | \\____$$\\  \\$$\\$$  / $$ /  $$ |\n *    $$ |  $$ |$$ |  $$ |$$ |\\$  /$$ |$$\\   $$ |  \\$$$  /  $$ |  $$ |\n *    $$$$$$$  | $$$$$$  |$$ | \\_/ $$ |\\$$$$$$  |   \\$  /   \\$$$$$$$ |\n *    \\_______/  \\______/ \\__|     \\__| \\______/     \\_/     \\____$$ |\n *                                                          $$\\   $$ |\n *                                                          \\$$$$$$  |\n *                                                           \\______/\n */\n\n\n/** Unsafely loads an external SVG file and inserts it into the DOM. */\nclass DOMSvg {\n    static readonly asString = 'BCD - DOM SVG';\n    static readonly cssClass = 'js-dom-svg';\n\n    svgSrc: string;\n    element: HTMLElement;\n\n    constructor(element: HTMLElement) {\n        const src = element.getAttribute('src');\n        if (!src) throw new Error('The DOM SVG must have a src attribute.');\n\n        this.svgSrc = src;\n        this.element = element;\n        this.initSvg();\n    }\n\n    async initSvg() {\n        try {\n            const svgRes = await fetch(`https://api.allorigins.win/raw?url=${encodeURIComponent(this.svgSrc)}`, {\n                cache: 'force-cache',\n            });\n\n            if (!svgRes.ok) {\n                this.element.classList.add('js-dom-svg--error', 'js-dom-svg--loaded');\n                return this.element.innerHTML = `<p>Could not load the image!</p><br><code>${svgRes.status}: ${svgRes.statusText || (svgRes.status == 408 ? 'Fetching the graphic took too long!' : '')}</code>`;\n            }\n\n            const svgTxt = await svgRes.text();\n\n            const svgDoc = window.domParser.parseFromString(svgTxt, 'image/svg+xml');\n\n            const svg = svgDoc.querySelector('svg') as SVGSVGElement;\n            if (!svg) throw new Error('Could not find the SVG element in the SVG document.');\n\n            this.element.appendChild(svg);\n            this.element.classList.add('js-dom-svg--loaded');\n        } catch (e) {\n            if ( ! (e instanceof Error) ) throw e;\n            console.warn('Could not load the SVG image.', e);\n\n            this.element.classList.add('js-dom-svg--error', 'js-dom-svg--loaded');\n            return this.element.innerHTML = `<p>Could not load the image!</p><br>JavaScript Error: <code>${e.message}</code>`;\n        }\n    }\n}\ncomponentsToRegister.push(DOMSvg);\n\n\n\n/*$$$$$\\              $$\\       $$\\     $$\\                                      $$$$$$\\            $$\\       $$\\\n$$  __$$\\             $$ |      $$ |    \\__|                                    $$  __$$\\           \\__|      $$ |\n$$ /  \\__| $$$$$$\\  $$$$$$\\   $$$$$$\\   $$\\ $$$$$$$\\   $$$$$$\\   $$$$$$$\\       $$ /  \\__| $$$$$$\\  $$\\  $$$$$$$ |\n\\$$$$$$\\  $$  __$$\\ \\_$$  _|  \\_$$  _|  $$ |$$  __$$\\ $$  __$$\\ $$  _____|      $$ |$$$$\\ $$  __$$\\ $$ |$$  __$$ |\n \\____$$\\ $$$$$$$$ |  $$ |      $$ |    $$ |$$ |  $$ |$$ /  $$ |\\$$$$$$\\        $$ |\\_$$ |$$ |  \\__|$$ |$$ /  $$ |\n$$\\   $$ |$$   ____|  $$ |$$\\   $$ |$$\\ $$ |$$ |  $$ |$$ |  $$ | \\____$$\\       $$ |  $$ |$$ |      $$ |$$ |  $$ |\n\\$$$$$$  |\\$$$$$$$\\   \\$$$$  |  \\$$$$  |$$ |$$ |  $$ |\\$$$$$$$ |$$$$$$$  |      \\$$$$$$  |$$ |      $$ |\\$$$$$$$ |\n \\______/  \\_______|   \\____/    \\____/ \\__|\\__|  \\__| \\____$$ |\\_______/        \\______/ \\__|      \\__| \\_______|\n                                                      $$\\   $$ |\n                                                      \\$$$$$$  |\n                                                       \\_____*/\n\ninterface settingsGridObj {\n    type: 'bool'|'string'\n    name: string,\n    tooltip?: string | {\n        text: string,\n        position: 'top'|'bottom'|'left'|'right'\n    };\n    options?: Record<string, string>,\n}\n\nconst settingsToUpdate: (() => unknown)[] = [];\nexport function updateSettings() {\n    for (let i = 0; i < settingsToUpdate.length; i++)\n        settingsToUpdate[i]!();\n}\n\ntype settingsGrid = Record<string, settingsGridObj>\nexport class SettingsGrid {\n    static readonly asString = 'BCD - Settings Grid';\n    static readonly cssClass = 'js-settings-grid';\n\n    element: HTMLElement;\n    settingTemplate: DocumentFragment;\n    settingsPath: string[];\n    settings: settingsGrid;\n    constructor(element: HTMLElement) {\n        this.element = element;\n        registerUpgrade(element, this, null, false, true);\n\n        this.settings = JSON.parse(element.textContent ?? '') as settingsGrid;\n        element.textContent = '';\n\n        const settingsElemID = element.getAttribute(\"data-templateID\");\n        if (!settingsElemID) throw new Error(\"Settings Grid is missing the data-templateID attribute!\");\n\n        const settingTemplate = document.getElementById(settingsElemID);\n        if (!settingTemplate || !(settingTemplate instanceof HTMLTemplateElement)) throw new Error(`Settings Grid cannot find a TEMPLATE element with the ID \"${settingsElemID}\"!`);\n\n        this.settingTemplate = settingTemplate.content;\n\n        this.settingsPath = element.getAttribute(\"data-settingsPath\")?.split('.') ?? [];\n\n        for (const [key, settings] of Object.entries(this.settings))\n            this.createSetting(key, settings);\n\n        this.element.hidden = false;\n    }\n\n    createSetting(key: string, settings: settingsGridObj) {\n        const children = this.settingTemplate.children;\n        if (!children[0]) throw new Error(\"Settings Grid template is missing a root element!\");\n        //console.log(children);\n\n        for (const child of children) {\n            const clone = child.cloneNode(true) as HTMLElement;\n\n            this.element.appendChild(clone);\n            this.upgradeElement(clone, key, settings);\n\n            // If the node wasn't removed, give 'er a tooltip\n            if (clone.parentElement && settings.tooltip) this.createTooltip(clone, settings.tooltip);\n        }\n    }\n\n    createTooltip(element: HTMLElement, tooltip: NonNullable<settingsGridObj['tooltip']>) {\n        //<div class=\"js-bcd-tooltip\" tooltip-relation=\"proceeding\" tooltip-position=\"bottom\"><p>\n        //    TOOLTIP INNER HTML\n        //</p></div>\n        const elem = document.createElement('div');\n        elem.classList.add('js-bcd-tooltip');\n        elem.setAttribute('tooltip-relation', 'proceeding');\n        elem.setAttribute('tooltip-position', typeof tooltip === 'object' ? tooltip.position : 'bottom');\n        elem.appendChild(document.createElement('p')).innerHTML = typeof tooltip === 'object' ? tooltip.text : tooltip;\n\n        element.insertAdjacentElement('afterend', elem);\n        mdl.componentHandler.upgradeElement(elem);\n    }\n\n    upgradeElement(element: Element, key: string, settings: settingsGridObj) {\n        if (!(element && 'getAttribute' in element)) return ;//console.error(\"A Settings Grid element was not actually an element!\", element);\n\n        const filterType = element.getAttribute('data-setting-filter');             // es lint-disable-next-line sonarjs/no-nested-template-literals\n        //console.log(`Upgrading child with type ${filterType ? `${filterType}:`:''}${displayType}`, element, settings);\n\n        if (filterType && filterType !== settings.type) return element.remove();//console.warn(\"Removing element from tree:\", (element.remove(), element));\n\n        for (const child of element.children) this.upgradeElement(child, key, settings);\n\n        const displayType = element.getAttribute('data-setting-display');\n        if (!displayType) return ;//console.warn('A Settings Grid element is missing the `data-setting-display` attribute!', element);\n\n        switch(displayType) {\n            case('id'):\n                element.id = `setting--${key}`;\n                break;\n\n            case('label'):\n                element.innerHTML = settings.name;\n                break;\n\n            case('checkbox'):\n                if (element instanceof HTMLInputElement) element.checked = !!this.getSetting(key, true);\n                else throw new Error(\"Settings Grid template has a checkbox that is not an INPUT element!\");\n\n                registerForEvents(element, {change: (() => this.setSetting(key, element.checked)).bind(this)});\n                settingsToUpdate.push(() => {\n                    if (element.checked !== !!this.getSetting(key))\n                        element.click();\n                });\n                break;\n\n            case('dropdown'):\n                element.classList.add(BCDSettingsDropdown.cssClass);\n                element.setAttribute('data-options', JSON.stringify(settings.options));\n                element.setAttribute('data-settings-path',  JSON.stringify(this.settingsPath));\n                element.setAttribute('data-setting',  key);\n                break;\n\n            default:\n                console.warn(`A Settings Grid element has an unknown display type: ${displayType}`, element);\n        }\n\n        //console.log(`Upgraded element with type ${displayType}. Passing off to MDL component handler...`);\n        mdl.componentHandler.upgradeElement(element);\n        //console.log(`Fully upgraded element with type ${displayType}!`);\n    }\n\n    getSetting<TReturnValue = string|boolean|number|null>(key: string|number, suppressError = false): TReturnValue|undefined { return SettingsGrid.getSetting<TReturnValue>(this.settingsPath, key, suppressError); }\n\n    static getSetting<TReturnValue = string|boolean|number|null>(settingsPath: string[], key: string|number, suppressError = false): TReturnValue|undefined {\n        try {\n            let currentDir = window;\n            for (const dir of settingsPath) //@ts-ignore: The path is dynamically pulled from the HTML document, so it's not possible to know what it will be at compile time\n                currentDir = currentDir?.[dir];\n\n            if (currentDir === undefined) throw new Error(`Settings Grid cannot find the settings path \"${settingsPath.join('.')}\"!`);\n\n            //@ts-ignore:  The path is dynamically pulled from the HTML document, so it's not possible to know what it will be at compile time\n            return currentDir[key];\n        } catch (e) {\n            if (!suppressError) console.error(e);\n            return undefined;\n        }\n    }\n\n    setSetting(key: string|number, value:string|boolean|number|null|undefined, suppressError = false): void { SettingsGrid.setSetting(this.settingsPath, key, value, suppressError); }\n\n    static setSetting(settingsPath: string[], key: string|number, value:string|boolean|number|null|undefined, suppressError = false): void {\n        try {\n            let currentDir = window;\n            for (const dir of settingsPath) //@ts-ignore: The path is dynamically pulled from the HTML document, so it's not possible to know what it will be at compile time\n                currentDir = currentDir?.[dir];\n\n            if (currentDir === undefined) throw new Error(`Settings Grid cannot find the settings path \"${settingsPath.join('.')}\"!`);\n\n            //@ts-ignore: The path is dynamically pulled from the HTML document, so it's not possible to know what it will be at compile time\n            return currentDir[key] = value;\n        } catch (e) {\n            if (!suppressError) console.error(e);\n            return undefined;\n        }\n    }\n}\ncomponentsToRegister.push(SettingsGrid);\n\n/** Variable to work around the complexities of Constructors and whatnot */\nlet tempKeyMap = {};\nexport class BCDSettingsDropdown extends BCDDropdown {\n    static readonly asString = 'BCD Settings Dropdown';\n    static readonly cssClass = 'js-bcd-settings-dropdown';\n\n    settingsPath:string[] = JSON.parse(this.element_.getAttribute('data-settings-path') ?? '[]');\n    settingKey = this.element_.getAttribute('data-setting') ?? '';\n    keyMap: Record<string, string>;\n\n    constructor(element: HTMLElement) {\n        //console.log('Constructing BCDSettingsDropdown', element);\n        super(element, element.previousElementSibling);\n        this.keyMap = tempKeyMap;\n        //console.log('[BCD-DROPDOWN] Key map is now', this.keyMap);\n        //this.selectByString(SettingsGrid.getSetting(this.settingsPath, this.settingKey) ?? '');\n        settingsToUpdate.push(() => {\n            this.selectByString(SettingsGrid.getSetting(this.settingsPath, this.settingKey) ?? '');\n        });\n    }\n\n    override selectByString(option: string): void {\n        //console.log('[BCD-DROPDOWN] Selecting by string', option, 'aka', this.keyMap?.[option], {keyMap: this.keyMap});\n        super.selectByString(this.keyMap[option] ?? option);\n    }\n\n    override options(): optionObj {\n        const options: optionObj = {};\n        Object.entries<string>(JSON.parse(this.element_.getAttribute('data-options') ?? '[]')).forEach(([literalName, prettyName]) => {\n            options[prettyName.toString()] = () => {\n                SettingsGrid.setSetting(this.settingsPath, this.settingKey, literalName);\n            };\n\n            //console.log('[BCD-DROPDOWN] Adding option', literalName, 'aka', prettyName);\n           this.keyMap ??= {};\n            this.keyMap[literalName] = prettyName;\n            //console.log('[BCD-DROPDOWN] Key map is now', this.keyMap);\n        });\n        tempKeyMap = this.keyMap;\n\n        return options;\n    }\n}\ncomponentsToRegister.push(BCDSettingsDropdown);\nwindow.BCDSettingsDropdown = BCDSettingsDropdown;\n\n\n/*\n\n\n\n$$$$$$$\\   $$$$$$\\  $$\\      $$\\         $$$$$$$\\                            $$\\\n$$  __$$\\ $$  __$$\\ $$$\\    $$$ |        $$  __$$\\                           $$ |\n$$ |  $$ |$$ /  $$ |$$$$\\  $$$$ |        $$ |  $$ | $$$$$$\\   $$$$$$\\   $$$$$$$ |$$\\   $$\\\n$$ |  $$ |$$ |  $$ |$$\\$$\\$$ $$ |$$$$$$\\ $$$$$$$  |$$  __$$\\  \\____$$\\ $$  __$$ |$$ |  $$ |\n$$ |  $$ |$$ |  $$ |$$ \\$$$  $$ |\\______|$$  __$$< $$$$$$$$ | $$$$$$$ |$$ /  $$ |$$ |  $$ |\n$$ |  $$ |$$ |  $$ |$$ |\\$  /$$ |        $$ |  $$ |$$   ____|$$  __$$ |$$ |  $$ |$$ |  $$ |\n$$$$$$$  | $$$$$$  |$$ | \\_/ $$ |        $$ |  $$ |\\$$$$$$$\\ \\$$$$$$$ |\\$$$$$$$ |\\$$$$$$$ |\n\\_______/  \\______/ \\__|     \\__|        \\__|  \\__| \\_______| \\_______| \\_______| \\____$$ |\n                                                                                 $$\\   $$ |\n                                                                                 \\$$$$$$  |\n                                                                                  \\______/\n$$$$$$\\           $$\\   $$\\     $$\\           $$\\ $$\\                       $$\\     $$\\\n\\_$$  _|          \\__|  $$ |    \\__|          $$ |\\__|                      $$ |    \\__|\n  $$ |  $$$$$$$\\  $$\\ $$$$$$\\   $$\\  $$$$$$\\  $$ |$$\\ $$$$$$$$\\  $$$$$$\\  $$$$$$\\   $$\\  $$$$$$\\  $$$$$$$\\\n  $$ |  $$  __$$\\ $$ |\\_$$  _|  $$ | \\____$$\\ $$ |$$ |\\____$$  | \\____$$\\ \\_$$  _|  $$ |$$  __$$\\ $$  __$$\\\n  $$ |  $$ |  $$ |$$ |  $$ |    $$ | $$$$$$$ |$$ |$$ |  $$$$ _/  $$$$$$$ |  $$ |    $$ |$$ /  $$ |$$ |  $$ |\n  $$ |  $$ |  $$ |$$ |  $$ |$$\\ $$ |$$  __$$ |$$ |$$ | $$  _/   $$  __$$ |  $$ |$$\\ $$ |$$ |  $$ |$$ |  $$ |\n$$$$$$\\ $$ |  $$ |$$ |  \\$$$$  |$$ |\\$$$$$$$ |$$ |$$ |$$$$$$$$\\ \\$$$$$$$ |  \\$$$$  |$$ |\\$$$$$$  |$$ |  $$ |\n\\______|\\__|  \\__|\\__|   \\____/ \\__| \\_______|\\__|\\__|\\________| \\_______|   \\____/ \\__| \\______/ \\__|  \\__|\n\n\n\n*/\n\nexport function bcd_universalJS_init():void {\n\n    // =============================================================\n    // Register all the things!\n    // =============================================================\n    afterDelay(10, ()=>  registerBCDComponents() );\n\n    // =============================================================\n    // Modify links not in the main nav to not send a referrer\n    // (allows for fancy drawer stuff)\n    // =============================================================\n    for (const link of [...document.links]){\n        if (window.layout.drawer_?.contains(link)) link.rel += \" noopener\";\n        else link.rel += \" noopener noreferrer\";\n    }\n\n    // =============================================================\n    // Random text time!\n    // =============================================================\n\n    const randomTextField = document.getElementById(\"randomized-text-field\");\n    if (!randomTextField) throw new Error(\"No random text field found!\");\n\n    const quote = quotes.getRandomQuote();\n    randomTextField.innerHTML = typeof quote === \"string\" ? quote : quote[1]!;\n\n    // =============================================================\n    // Import Lazy-Loaded Styles\n    // =============================================================\n    afterDelay(100, () => {\n        const lazyStyles = JSON.parse(`[${document.getElementById('lazy-styles')?.textContent ?? ''}]`) as string[];\n\n        for (const style of lazyStyles) {\n            const link = document.createElement('link');\n            link.rel = 'stylesheet';\n            link.href = style;\n            document.head.appendChild(link);\n        }\n\n        document.documentElement.classList.remove('lazy-styles-not-loaded');\n        window.lazyStylesLoaded = true;\n    });\n\n    // =============================================================\n    // Set main content div to respect the footer for mobile\n    // =============================================================\n\n    // NOTE: This code has been compiled, minified, and relocated to the page HTML itself\n\n    //const footer = document.getElementById('footer') as HTMLDivElement;\n    //\n    //if (!footer) throw new Error('No main or footer div found!');\n    //function resizeMain() {\n    //    const footerHeight = (footer!.firstElementChild as HTMLElement)?.offsetHeight ?? 0;\n    //    footer!.style.height = `${footerHeight}px`;\n    //}\n    //const contResizeObserver = new ResizeObserver(resizeMain);\n    //resizeMain();\n    //contResizeObserver.observe(footer.firstElementChild ?? footer);\n\n    // =============================================================\n    // Register for more inclusive invents as a replacement for the `onclick` attribute\n    // For buttons, register some events to assist in visual styling\n    // =============================================================\n\n    afterDelay(150, () => {\n        const elementsWithClickEvt = document.querySelectorAll('[onclick]') as NodeListOf<HTMLElement>;\n        for (const element of elementsWithClickEvt) {\n            const funct = element.onclick as EventTypes<HTMLElement>['activate'];\n            if (!funct) continue;\n\n            registerForEvents(element, {activate: funct});\n\n            element.onclick = null;\n            element.removeAttribute('onclick');\n        }\n\n        const buttons = document.querySelectorAll('button');\n        function blurElem(this: HTMLElement) { this.blur(); }\n        for (const button of buttons) {\n            button.addEventListener('mouseup', blurElem);\n            button.addEventListener('touchend', blurElem);\n        }\n    });\n\n    // =============================================================\n    // Add IDs to all headers - ONLY FOR USE IN SAME-PAGE LINKS\n    // =============================================================\n    afterDelay(200, () => {\n        const headers = document.querySelectorAll(':is(nav, main) :is(h1, h2, h3, h4, h5, h6)');\n        for (const header of headers) {\n            if (header.id) continue;\n            header.id = header.textContent?.trim().replace(/['\"+=?!@#$%^*]+/gi, '').replace(/&+/gi, 'and').replace(/[^a-z0-9]+/gi, '-').toLowerCase() ?? '';\n        }\n\n        const navHeaders = document.querySelectorAll('nav :is(h1, h2, h3, h4, h5, h6)');\n        for (const header of navHeaders) { if (header.id) header.id = `nav-${header.id}`; }\n\n        // Scroll to the hash if it exists\n        if (window.location.hash.startsWith('#'))  {\n            if (window.location.hash === '#') window.scrollTo(0, 0);\n            else {\n                const elem = document.getElementById(window.location.hash.substring(1));\n\n                if (elem) elem.scrollIntoView({ behavior: 'smooth' });\n                else console.info(`No element with ID \"${window.location.hash.substring(1)}\" found!`);\n            }\n        }\n\n    });\n\n    // =============================================================\n    // Register for the drawer open/close events\n    // =============================================================\n\n    const drawer = document.querySelector('.mdl-layout__drawer') as HTMLDivElement;\n\n    drawer.addEventListener('drawerOpen', drawerOpenHandler);\n    drawer.addEventListener('drawerClose', drawerCloseHandler);\n\n    if (drawer.classList.contains('is-visible')) drawerOpenHandler.call(drawer);\n    else drawerCloseHandler.call(drawer);\n\n}\nwindow.bcd_init_functions.universal = bcd_universalJS_init;\n\n\nfunction drawerOpenHandler(this: HTMLDivElement) {\n    this.removeAttribute('aria-hidden');\n    BCD_CollapsibleParent.setDisabled(this, false);\n}\n\nfunction drawerCloseHandler(this: HTMLDivElement) {\n    this.setAttribute('aria-hidden', 'true');\n    BCD_CollapsibleParent.setDisabled(this, true);\n}\n"],"mappings":"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"}